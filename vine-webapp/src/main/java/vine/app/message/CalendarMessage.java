// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CalendarMessage.proto

package vine.app.message;

public final class CalendarMessage {
  private CalendarMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface FindCalendarListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string startTime = 1;
    boolean hasStartTime();
    String getStartTime();
    
    // optional string endTime = 2;
    boolean hasEndTime();
    String getEndTime();
    
    // optional int64 calCategoryId = 3;
    boolean hasCalCategoryId();
    long getCalCategoryId();
    
    // optional int32 priority = 4;
    boolean hasPriority();
    int getPriority();
    
    // optional string keyword = 5;
    boolean hasKeyword();
    String getKeyword();
  }
  public static final class FindCalendarList extends
      com.google.protobuf.GeneratedMessage
      implements FindCalendarListOrBuilder {
    // Use FindCalendarList.newBuilder() to construct.
    private FindCalendarList(Builder builder) {
      super(builder);
    }
    private FindCalendarList(boolean noInit) {}
    
    private static final FindCalendarList defaultInstance;
    public static FindCalendarList getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindCalendarList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_FindCalendarList_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_FindCalendarList_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string startTime = 1;
    public static final int STARTTIME_FIELD_NUMBER = 1;
    private Object startTime_;
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getStartTime() {
      Object ref = startTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          startTime_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStartTimeBytes() {
      Object ref = startTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        startTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string endTime = 2;
    public static final int ENDTIME_FIELD_NUMBER = 2;
    private Object endTime_;
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getEndTime() {
      Object ref = endTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          endTime_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEndTimeBytes() {
      Object ref = endTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        endTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int64 calCategoryId = 3;
    public static final int CALCATEGORYID_FIELD_NUMBER = 3;
    private long calCategoryId_;
    public boolean hasCalCategoryId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getCalCategoryId() {
      return calCategoryId_;
    }
    
    // optional int32 priority = 4;
    public static final int PRIORITY_FIELD_NUMBER = 4;
    private int priority_;
    public boolean hasPriority() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getPriority() {
      return priority_;
    }
    
    // optional string keyword = 5;
    public static final int KEYWORD_FIELD_NUMBER = 5;
    private Object keyword_;
    public boolean hasKeyword() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getKeyword() {
      Object ref = keyword_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          keyword_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getKeywordBytes() {
      Object ref = keyword_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        keyword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      startTime_ = "";
      endTime_ = "";
      calCategoryId_ = 0L;
      priority_ = 0;
      keyword_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getStartTimeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getEndTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, calCategoryId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, priority_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getKeywordBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getStartTimeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getEndTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, calCategoryId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, priority_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getKeywordBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FindCalendarList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FindCalendarList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FindCalendarListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_FindCalendarList_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_FindCalendarList_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.FindCalendarList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        startTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        endTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        calCategoryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        priority_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        keyword_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FindCalendarList.getDescriptor();
      }
      
      public FindCalendarList getDefaultInstanceForType() {
        return FindCalendarList.getDefaultInstance();
      }
      
      public FindCalendarList build() {
        FindCalendarList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FindCalendarList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FindCalendarList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FindCalendarList buildPartial() {
        FindCalendarList result = new FindCalendarList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.calCategoryId_ = calCategoryId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.priority_ = priority_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.keyword_ = keyword_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FindCalendarList) {
          return mergeFrom((FindCalendarList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FindCalendarList other) {
        if (other == FindCalendarList.getDefaultInstance()) return this;
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasCalCategoryId()) {
          setCalCategoryId(other.getCalCategoryId());
        }
        if (other.hasPriority()) {
          setPriority(other.getPriority());
        }
        if (other.hasKeyword()) {
          setKeyword(other.getKeyword());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              startTime_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              endTime_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              calCategoryId_ = input.readInt64();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              priority_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              keyword_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string startTime = 1;
      private Object startTime_ = "";
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getStartTime() {
        Object ref = startTime_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          startTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStartTime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        startTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startTime_ = getDefaultInstance().getStartTime();
        onChanged();
        return this;
      }
      void setStartTime(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        startTime_ = value;
        onChanged();
      }
      
      // optional string endTime = 2;
      private Object endTime_ = "";
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getEndTime() {
        Object ref = endTime_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          endTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEndTime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        endTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = getDefaultInstance().getEndTime();
        onChanged();
        return this;
      }
      void setEndTime(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        endTime_ = value;
        onChanged();
      }
      
      // optional int64 calCategoryId = 3;
      private long calCategoryId_ ;
      public boolean hasCalCategoryId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getCalCategoryId() {
        return calCategoryId_;
      }
      public Builder setCalCategoryId(long value) {
        bitField0_ |= 0x00000004;
        calCategoryId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalCategoryId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        calCategoryId_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int32 priority = 4;
      private int priority_ ;
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getPriority() {
        return priority_;
      }
      public Builder setPriority(int value) {
        bitField0_ |= 0x00000008;
        priority_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000008);
        priority_ = 0;
        onChanged();
        return this;
      }
      
      // optional string keyword = 5;
      private Object keyword_ = "";
      public boolean hasKeyword() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getKeyword() {
        Object ref = keyword_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          keyword_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setKeyword(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        keyword_ = value;
        onChanged();
        return this;
      }
      public Builder clearKeyword() {
        bitField0_ = (bitField0_ & ~0x00000010);
        keyword_ = getDefaultInstance().getKeyword();
        onChanged();
        return this;
      }
      void setKeyword(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        keyword_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:FindCalendarList)
    }
    
    static {
      defaultInstance = new FindCalendarList(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FindCalendarList)
  }
  
  public interface CalendarOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 id = 1;
    boolean hasId();
    long getId();
    
    // optional int64 userId = 2;
    boolean hasUserId();
    long getUserId();
    
    // optional int64 calCategoryId = 3;
    boolean hasCalCategoryId();
    long getCalCategoryId();
    
    // optional string calName = 4;
    boolean hasCalName();
    String getCalName();
    
    // optional string calDesc = 5;
    boolean hasCalDesc();
    String getCalDesc();
    
    // optional string calPic = 6;
    boolean hasCalPic();
    String getCalPic();
    
    // optional string calVoice = 7;
    boolean hasCalVoice();
    String getCalVoice();
    
    // optional string calVideo = 8;
    boolean hasCalVideo();
    String getCalVideo();
    
    // optional int32 priority = 9;
    boolean hasPriority();
    int getPriority();
    
    // optional int32 alterEnabled = 10;
    boolean hasAlterEnabled();
    int getAlterEnabled();
    
    // optional int32 openEnabled = 11;
    boolean hasOpenEnabled();
    int getOpenEnabled();
    
    // optional int32 endEnabled = 12;
    boolean hasEndEnabled();
    int getEndEnabled();
    
    // optional int64 alterTime = 13;
    boolean hasAlterTime();
    long getAlterTime();
    
    // optional int32 alterForward = 14;
    boolean hasAlterForward();
    int getAlterForward();
    
    // optional int64 longitude = 15;
    boolean hasLongitude();
    long getLongitude();
    
    // optional int64 latitude = 16;
    boolean hasLatitude();
    long getLatitude();
    
    // optional string localInfo = 17;
    boolean hasLocalInfo();
    String getLocalInfo();
    
    // optional int32 enabled = 18;
    boolean hasEnabled();
    int getEnabled();
    
    // optional int64 createTime = 19;
    boolean hasCreateTime();
    long getCreateTime();
    
    // optional string createBy = 20;
    boolean hasCreateBy();
    String getCreateBy();
    
    // optional int64 updateTime = 21;
    boolean hasUpdateTime();
    long getUpdateTime();
    
    // optional string updateBy = 22;
    boolean hasUpdateBy();
    String getUpdateBy();
  }
  public static final class Calendar extends
      com.google.protobuf.GeneratedMessage
      implements CalendarOrBuilder {
    // Use Calendar.newBuilder() to construct.
    private Calendar(Builder builder) {
      super(builder);
    }
    private Calendar(boolean noInit) {}
    
    private static final Calendar defaultInstance;
    public static Calendar getDefaultInstance() {
      return defaultInstance;
    }
    
    public Calendar getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_Calendar_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_Calendar_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getId() {
      return id_;
    }
    
    // optional int64 userId = 2;
    public static final int USERID_FIELD_NUMBER = 2;
    private long userId_;
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getUserId() {
      return userId_;
    }
    
    // optional int64 calCategoryId = 3;
    public static final int CALCATEGORYID_FIELD_NUMBER = 3;
    private long calCategoryId_;
    public boolean hasCalCategoryId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getCalCategoryId() {
      return calCategoryId_;
    }
    
    // optional string calName = 4;
    public static final int CALNAME_FIELD_NUMBER = 4;
    private Object calName_;
    public boolean hasCalName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getCalName() {
      Object ref = calName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          calName_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCalNameBytes() {
      Object ref = calName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        calName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string calDesc = 5;
    public static final int CALDESC_FIELD_NUMBER = 5;
    private Object calDesc_;
    public boolean hasCalDesc() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getCalDesc() {
      Object ref = calDesc_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          calDesc_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCalDescBytes() {
      Object ref = calDesc_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        calDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string calPic = 6;
    public static final int CALPIC_FIELD_NUMBER = 6;
    private Object calPic_;
    public boolean hasCalPic() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getCalPic() {
      Object ref = calPic_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          calPic_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCalPicBytes() {
      Object ref = calPic_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        calPic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string calVoice = 7;
    public static final int CALVOICE_FIELD_NUMBER = 7;
    private Object calVoice_;
    public boolean hasCalVoice() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getCalVoice() {
      Object ref = calVoice_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          calVoice_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCalVoiceBytes() {
      Object ref = calVoice_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        calVoice_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string calVideo = 8;
    public static final int CALVIDEO_FIELD_NUMBER = 8;
    private Object calVideo_;
    public boolean hasCalVideo() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public String getCalVideo() {
      Object ref = calVideo_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          calVideo_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCalVideoBytes() {
      Object ref = calVideo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        calVideo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 priority = 9;
    public static final int PRIORITY_FIELD_NUMBER = 9;
    private int priority_;
    public boolean hasPriority() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public int getPriority() {
      return priority_;
    }
    
    // optional int32 alterEnabled = 10;
    public static final int ALTERENABLED_FIELD_NUMBER = 10;
    private int alterEnabled_;
    public boolean hasAlterEnabled() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public int getAlterEnabled() {
      return alterEnabled_;
    }
    
    // optional int32 openEnabled = 11;
    public static final int OPENENABLED_FIELD_NUMBER = 11;
    private int openEnabled_;
    public boolean hasOpenEnabled() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getOpenEnabled() {
      return openEnabled_;
    }
    
    // optional int32 endEnabled = 12;
    public static final int ENDENABLED_FIELD_NUMBER = 12;
    private int endEnabled_;
    public boolean hasEndEnabled() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public int getEndEnabled() {
      return endEnabled_;
    }
    
    // optional int64 alterTime = 13;
    public static final int ALTERTIME_FIELD_NUMBER = 13;
    private long alterTime_;
    public boolean hasAlterTime() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public long getAlterTime() {
      return alterTime_;
    }
    
    // optional int32 alterForward = 14;
    public static final int ALTERFORWARD_FIELD_NUMBER = 14;
    private int alterForward_;
    public boolean hasAlterForward() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public int getAlterForward() {
      return alterForward_;
    }
    
    // optional int64 longitude = 15;
    public static final int LONGITUDE_FIELD_NUMBER = 15;
    private long longitude_;
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public long getLongitude() {
      return longitude_;
    }
    
    // optional int64 latitude = 16;
    public static final int LATITUDE_FIELD_NUMBER = 16;
    private long latitude_;
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    public long getLatitude() {
      return latitude_;
    }
    
    // optional string localInfo = 17;
    public static final int LOCALINFO_FIELD_NUMBER = 17;
    private Object localInfo_;
    public boolean hasLocalInfo() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    public String getLocalInfo() {
      Object ref = localInfo_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          localInfo_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLocalInfoBytes() {
      Object ref = localInfo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        localInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 enabled = 18;
    public static final int ENABLED_FIELD_NUMBER = 18;
    private int enabled_;
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    public int getEnabled() {
      return enabled_;
    }
    
    // optional int64 createTime = 19;
    public static final int CREATETIME_FIELD_NUMBER = 19;
    private long createTime_;
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    public long getCreateTime() {
      return createTime_;
    }
    
    // optional string createBy = 20;
    public static final int CREATEBY_FIELD_NUMBER = 20;
    private Object createBy_;
    public boolean hasCreateBy() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    public String getCreateBy() {
      Object ref = createBy_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          createBy_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCreateByBytes() {
      Object ref = createBy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        createBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int64 updateTime = 21;
    public static final int UPDATETIME_FIELD_NUMBER = 21;
    private long updateTime_;
    public boolean hasUpdateTime() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    public long getUpdateTime() {
      return updateTime_;
    }
    
    // optional string updateBy = 22;
    public static final int UPDATEBY_FIELD_NUMBER = 22;
    private Object updateBy_;
    public boolean hasUpdateBy() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    public String getUpdateBy() {
      Object ref = updateBy_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          updateBy_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUpdateByBytes() {
      Object ref = updateBy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        updateBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      id_ = 0L;
      userId_ = 0L;
      calCategoryId_ = 0L;
      calName_ = "";
      calDesc_ = "";
      calPic_ = "";
      calVoice_ = "";
      calVideo_ = "";
      priority_ = 0;
      alterEnabled_ = 0;
      openEnabled_ = 0;
      endEnabled_ = 0;
      alterTime_ = 0L;
      alterForward_ = 0;
      longitude_ = 0L;
      latitude_ = 0L;
      localInfo_ = "";
      enabled_ = 0;
      createTime_ = 0L;
      createBy_ = "";
      updateTime_ = 0L;
      updateBy_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, calCategoryId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getCalNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getCalDescBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getCalPicBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getCalVoiceBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getCalVideoBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, priority_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, alterEnabled_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, openEnabled_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, endEnabled_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt64(13, alterTime_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, alterForward_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(15, longitude_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(16, latitude_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBytes(17, getLocalInfoBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, enabled_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(19, createTime_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBytes(20, getCreateByBytes());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(21, updateTime_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBytes(22, getUpdateByBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, calCategoryId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getCalNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getCalDescBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCalPicBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getCalVoiceBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getCalVideoBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, priority_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, alterEnabled_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, openEnabled_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, endEnabled_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(13, alterTime_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, alterForward_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, longitude_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, latitude_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getLocalInfoBytes());
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, enabled_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, createTime_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(20, getCreateByBytes());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(21, updateTime_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(22, getUpdateByBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Calendar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Calendar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Calendar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Calendar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Calendar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Calendar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Calendar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Calendar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Calendar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Calendar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Calendar prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements CalendarOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_Calendar_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_Calendar_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.Calendar.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        calCategoryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        calName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        calDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        calPic_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        calVoice_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        calVideo_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        priority_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        alterEnabled_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        openEnabled_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        endEnabled_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        alterTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00001000);
        alterForward_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        longitude_ = 0L;
        bitField0_ = (bitField0_ & ~0x00004000);
        latitude_ = 0L;
        bitField0_ = (bitField0_ & ~0x00008000);
        localInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        enabled_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00040000);
        createBy_ = "";
        bitField0_ = (bitField0_ & ~0x00080000);
        updateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00100000);
        updateBy_ = "";
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Calendar.getDescriptor();
      }
      
      public Calendar getDefaultInstanceForType() {
        return Calendar.getDefaultInstance();
      }
      
      public Calendar build() {
        Calendar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Calendar buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Calendar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Calendar buildPartial() {
        Calendar result = new Calendar(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.calCategoryId_ = calCategoryId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.calName_ = calName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.calDesc_ = calDesc_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.calPic_ = calPic_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.calVoice_ = calVoice_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.calVideo_ = calVideo_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.priority_ = priority_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.alterEnabled_ = alterEnabled_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.openEnabled_ = openEnabled_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.endEnabled_ = endEnabled_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.alterTime_ = alterTime_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.alterForward_ = alterForward_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.localInfo_ = localInfo_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.enabled_ = enabled_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.createBy_ = createBy_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.updateTime_ = updateTime_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.updateBy_ = updateBy_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Calendar) {
          return mergeFrom((Calendar)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Calendar other) {
        if (other == Calendar.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasCalCategoryId()) {
          setCalCategoryId(other.getCalCategoryId());
        }
        if (other.hasCalName()) {
          setCalName(other.getCalName());
        }
        if (other.hasCalDesc()) {
          setCalDesc(other.getCalDesc());
        }
        if (other.hasCalPic()) {
          setCalPic(other.getCalPic());
        }
        if (other.hasCalVoice()) {
          setCalVoice(other.getCalVoice());
        }
        if (other.hasCalVideo()) {
          setCalVideo(other.getCalVideo());
        }
        if (other.hasPriority()) {
          setPriority(other.getPriority());
        }
        if (other.hasAlterEnabled()) {
          setAlterEnabled(other.getAlterEnabled());
        }
        if (other.hasOpenEnabled()) {
          setOpenEnabled(other.getOpenEnabled());
        }
        if (other.hasEndEnabled()) {
          setEndEnabled(other.getEndEnabled());
        }
        if (other.hasAlterTime()) {
          setAlterTime(other.getAlterTime());
        }
        if (other.hasAlterForward()) {
          setAlterForward(other.getAlterForward());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLocalInfo()) {
          setLocalInfo(other.getLocalInfo());
        }
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasCreateBy()) {
          setCreateBy(other.getCreateBy());
        }
        if (other.hasUpdateTime()) {
          setUpdateTime(other.getUpdateTime());
        }
        if (other.hasUpdateBy()) {
          setUpdateBy(other.getUpdateBy());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              userId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              calCategoryId_ = input.readInt64();
              break;
            }
            case 34: {
              bitField0_ |= 0x00000008;
              calName_ = input.readBytes();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              calDesc_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              calPic_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              calVoice_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000080;
              calVideo_ = input.readBytes();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              priority_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              alterEnabled_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              openEnabled_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              endEnabled_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              alterTime_ = input.readInt64();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              alterForward_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              longitude_ = input.readInt64();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              latitude_ = input.readInt64();
              break;
            }
            case 138: {
              bitField0_ |= 0x00010000;
              localInfo_ = input.readBytes();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              enabled_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00040000;
              createTime_ = input.readInt64();
              break;
            }
            case 162: {
              bitField0_ |= 0x00080000;
              createBy_ = input.readBytes();
              break;
            }
            case 168: {
              bitField0_ |= 0x00100000;
              updateTime_ = input.readInt64();
              break;
            }
            case 178: {
              bitField0_ |= 0x00200000;
              updateBy_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 id = 1;
      private long id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getId() {
        return id_;
      }
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 userId = 2;
      private long userId_ ;
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getUserId() {
        return userId_;
      }
      public Builder setUserId(long value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        onChanged();
        return this;
      }
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 calCategoryId = 3;
      private long calCategoryId_ ;
      public boolean hasCalCategoryId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getCalCategoryId() {
        return calCategoryId_;
      }
      public Builder setCalCategoryId(long value) {
        bitField0_ |= 0x00000004;
        calCategoryId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalCategoryId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        calCategoryId_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string calName = 4;
      private Object calName_ = "";
      public boolean hasCalName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getCalName() {
        Object ref = calName_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          calName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCalName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        calName_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        calName_ = getDefaultInstance().getCalName();
        onChanged();
        return this;
      }
      void setCalName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        calName_ = value;
        onChanged();
      }
      
      // optional string calDesc = 5;
      private Object calDesc_ = "";
      public boolean hasCalDesc() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getCalDesc() {
        Object ref = calDesc_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          calDesc_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCalDesc(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        calDesc_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalDesc() {
        bitField0_ = (bitField0_ & ~0x00000010);
        calDesc_ = getDefaultInstance().getCalDesc();
        onChanged();
        return this;
      }
      void setCalDesc(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        calDesc_ = value;
        onChanged();
      }
      
      // optional string calPic = 6;
      private Object calPic_ = "";
      public boolean hasCalPic() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getCalPic() {
        Object ref = calPic_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          calPic_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCalPic(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        calPic_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalPic() {
        bitField0_ = (bitField0_ & ~0x00000020);
        calPic_ = getDefaultInstance().getCalPic();
        onChanged();
        return this;
      }
      void setCalPic(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        calPic_ = value;
        onChanged();
      }
      
      // optional string calVoice = 7;
      private Object calVoice_ = "";
      public boolean hasCalVoice() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getCalVoice() {
        Object ref = calVoice_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          calVoice_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCalVoice(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        calVoice_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalVoice() {
        bitField0_ = (bitField0_ & ~0x00000040);
        calVoice_ = getDefaultInstance().getCalVoice();
        onChanged();
        return this;
      }
      void setCalVoice(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        calVoice_ = value;
        onChanged();
      }
      
      // optional string calVideo = 8;
      private Object calVideo_ = "";
      public boolean hasCalVideo() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public String getCalVideo() {
        Object ref = calVideo_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          calVideo_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCalVideo(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        calVideo_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalVideo() {
        bitField0_ = (bitField0_ & ~0x00000080);
        calVideo_ = getDefaultInstance().getCalVideo();
        onChanged();
        return this;
      }
      void setCalVideo(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000080;
        calVideo_ = value;
        onChanged();
      }
      
      // optional int32 priority = 9;
      private int priority_ ;
      public boolean hasPriority() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public int getPriority() {
        return priority_;
      }
      public Builder setPriority(int value) {
        bitField0_ |= 0x00000100;
        priority_ = value;
        onChanged();
        return this;
      }
      public Builder clearPriority() {
        bitField0_ = (bitField0_ & ~0x00000100);
        priority_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 alterEnabled = 10;
      private int alterEnabled_ ;
      public boolean hasAlterEnabled() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public int getAlterEnabled() {
        return alterEnabled_;
      }
      public Builder setAlterEnabled(int value) {
        bitField0_ |= 0x00000200;
        alterEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearAlterEnabled() {
        bitField0_ = (bitField0_ & ~0x00000200);
        alterEnabled_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 openEnabled = 11;
      private int openEnabled_ ;
      public boolean hasOpenEnabled() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getOpenEnabled() {
        return openEnabled_;
      }
      public Builder setOpenEnabled(int value) {
        bitField0_ |= 0x00000400;
        openEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearOpenEnabled() {
        bitField0_ = (bitField0_ & ~0x00000400);
        openEnabled_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 endEnabled = 12;
      private int endEnabled_ ;
      public boolean hasEndEnabled() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public int getEndEnabled() {
        return endEnabled_;
      }
      public Builder setEndEnabled(int value) {
        bitField0_ |= 0x00000800;
        endEnabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearEndEnabled() {
        bitField0_ = (bitField0_ & ~0x00000800);
        endEnabled_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 alterTime = 13;
      private long alterTime_ ;
      public boolean hasAlterTime() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public long getAlterTime() {
        return alterTime_;
      }
      public Builder setAlterTime(long value) {
        bitField0_ |= 0x00001000;
        alterTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearAlterTime() {
        bitField0_ = (bitField0_ & ~0x00001000);
        alterTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int32 alterForward = 14;
      private int alterForward_ ;
      public boolean hasAlterForward() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public int getAlterForward() {
        return alterForward_;
      }
      public Builder setAlterForward(int value) {
        bitField0_ |= 0x00002000;
        alterForward_ = value;
        onChanged();
        return this;
      }
      public Builder clearAlterForward() {
        bitField0_ = (bitField0_ & ~0x00002000);
        alterForward_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 longitude = 15;
      private long longitude_ ;
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public long getLongitude() {
        return longitude_;
      }
      public Builder setLongitude(long value) {
        bitField0_ |= 0x00004000;
        longitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00004000);
        longitude_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 latitude = 16;
      private long latitude_ ;
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      public long getLatitude() {
        return latitude_;
      }
      public Builder setLatitude(long value) {
        bitField0_ |= 0x00008000;
        latitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00008000);
        latitude_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string localInfo = 17;
      private Object localInfo_ = "";
      public boolean hasLocalInfo() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      public String getLocalInfo() {
        Object ref = localInfo_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          localInfo_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLocalInfo(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        localInfo_ = value;
        onChanged();
        return this;
      }
      public Builder clearLocalInfo() {
        bitField0_ = (bitField0_ & ~0x00010000);
        localInfo_ = getDefaultInstance().getLocalInfo();
        onChanged();
        return this;
      }
      void setLocalInfo(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00010000;
        localInfo_ = value;
        onChanged();
      }
      
      // optional int32 enabled = 18;
      private int enabled_ ;
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      public int getEnabled() {
        return enabled_;
      }
      public Builder setEnabled(int value) {
        bitField0_ |= 0x00020000;
        enabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00020000);
        enabled_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 createTime = 19;
      private long createTime_ ;
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      public long getCreateTime() {
        return createTime_;
      }
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00040000;
        createTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00040000);
        createTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string createBy = 20;
      private Object createBy_ = "";
      public boolean hasCreateBy() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      public String getCreateBy() {
        Object ref = createBy_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          createBy_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCreateBy(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        createBy_ = value;
        onChanged();
        return this;
      }
      public Builder clearCreateBy() {
        bitField0_ = (bitField0_ & ~0x00080000);
        createBy_ = getDefaultInstance().getCreateBy();
        onChanged();
        return this;
      }
      void setCreateBy(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00080000;
        createBy_ = value;
        onChanged();
      }
      
      // optional int64 updateTime = 21;
      private long updateTime_ ;
      public boolean hasUpdateTime() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      public long getUpdateTime() {
        return updateTime_;
      }
      public Builder setUpdateTime(long value) {
        bitField0_ |= 0x00100000;
        updateTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearUpdateTime() {
        bitField0_ = (bitField0_ & ~0x00100000);
        updateTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string updateBy = 22;
      private Object updateBy_ = "";
      public boolean hasUpdateBy() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      public String getUpdateBy() {
        Object ref = updateBy_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          updateBy_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUpdateBy(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
        updateBy_ = value;
        onChanged();
        return this;
      }
      public Builder clearUpdateBy() {
        bitField0_ = (bitField0_ & ~0x00200000);
        updateBy_ = getDefaultInstance().getUpdateBy();
        onChanged();
        return this;
      }
      void setUpdateBy(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00200000;
        updateBy_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:Calendar)
    }
    
    static {
      defaultInstance = new Calendar(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Calendar)
  }
  
  public interface FindCalendarListRetOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .Calendar calendars = 1;
    java.util.List<Calendar>
        getCalendarsList();
    Calendar getCalendars(int index);
    int getCalendarsCount();
    java.util.List<? extends CalendarOrBuilder>
        getCalendarsOrBuilderList();
    CalendarOrBuilder getCalendarsOrBuilder(
            int index);
  }
  public static final class FindCalendarListRet extends
      com.google.protobuf.GeneratedMessage
      implements FindCalendarListRetOrBuilder {
    // Use FindCalendarListRet.newBuilder() to construct.
    private FindCalendarListRet(Builder builder) {
      super(builder);
    }
    private FindCalendarListRet(boolean noInit) {}
    
    private static final FindCalendarListRet defaultInstance;
    public static FindCalendarListRet getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindCalendarListRet getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_FindCalendarListRet_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_FindCalendarListRet_fieldAccessorTable;
    }
    
    // repeated .Calendar calendars = 1;
    public static final int CALENDARS_FIELD_NUMBER = 1;
    private java.util.List<Calendar> calendars_;
    public java.util.List<Calendar> getCalendarsList() {
      return calendars_;
    }
    public java.util.List<? extends CalendarOrBuilder>
        getCalendarsOrBuilderList() {
      return calendars_;
    }
    public int getCalendarsCount() {
      return calendars_.size();
    }
    public Calendar getCalendars(int index) {
      return calendars_.get(index);
    }
    public CalendarOrBuilder getCalendarsOrBuilder(
        int index) {
      return calendars_.get(index);
    }
    
    private void initFields() {
      calendars_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < calendars_.size(); i++) {
        output.writeMessage(1, calendars_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < calendars_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendars_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FindCalendarListRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarListRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarListRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarListRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarListRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarListRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarListRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarListRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarListRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarListRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FindCalendarListRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FindCalendarListRetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_FindCalendarListRet_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_FindCalendarListRet_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.FindCalendarListRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCalendarsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (calendarsBuilder_ == null) {
          calendars_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          calendarsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FindCalendarListRet.getDescriptor();
      }
      
      public FindCalendarListRet getDefaultInstanceForType() {
        return FindCalendarListRet.getDefaultInstance();
      }
      
      public FindCalendarListRet build() {
        FindCalendarListRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FindCalendarListRet buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FindCalendarListRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FindCalendarListRet buildPartial() {
        FindCalendarListRet result = new FindCalendarListRet(this);
        int from_bitField0_ = bitField0_;
        if (calendarsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            calendars_ = java.util.Collections.unmodifiableList(calendars_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.calendars_ = calendars_;
        } else {
          result.calendars_ = calendarsBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FindCalendarListRet) {
          return mergeFrom((FindCalendarListRet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FindCalendarListRet other) {
        if (other == FindCalendarListRet.getDefaultInstance()) return this;
        if (calendarsBuilder_ == null) {
          if (!other.calendars_.isEmpty()) {
            if (calendars_.isEmpty()) {
              calendars_ = other.calendars_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCalendarsIsMutable();
              calendars_.addAll(other.calendars_);
            }
            onChanged();
          }
        } else {
          if (!other.calendars_.isEmpty()) {
            if (calendarsBuilder_.isEmpty()) {
              calendarsBuilder_.dispose();
              calendarsBuilder_ = null;
              calendars_ = other.calendars_;
              bitField0_ = (bitField0_ & ~0x00000001);
              calendarsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCalendarsFieldBuilder() : null;
            } else {
              calendarsBuilder_.addAllMessages(other.calendars_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              Calendar.Builder subBuilder = Calendar.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCalendars(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .Calendar calendars = 1;
      private java.util.List<Calendar> calendars_ =
        java.util.Collections.emptyList();
      private void ensureCalendarsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          calendars_ = new java.util.ArrayList<Calendar>(calendars_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          Calendar, Calendar.Builder, CalendarOrBuilder> calendarsBuilder_;
      
      public java.util.List<Calendar> getCalendarsList() {
        if (calendarsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(calendars_);
        } else {
          return calendarsBuilder_.getMessageList();
        }
      }
      public int getCalendarsCount() {
        if (calendarsBuilder_ == null) {
          return calendars_.size();
        } else {
          return calendarsBuilder_.getCount();
        }
      }
      public Calendar getCalendars(int index) {
        if (calendarsBuilder_ == null) {
          return calendars_.get(index);
        } else {
          return calendarsBuilder_.getMessage(index);
        }
      }
      public Builder setCalendars(
          int index, Calendar value) {
        if (calendarsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalendarsIsMutable();
          calendars_.set(index, value);
          onChanged();
        } else {
          calendarsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCalendars(
          int index, Calendar.Builder builderForValue) {
        if (calendarsBuilder_ == null) {
          ensureCalendarsIsMutable();
          calendars_.set(index, builderForValue.build());
          onChanged();
        } else {
          calendarsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCalendars(Calendar value) {
        if (calendarsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalendarsIsMutable();
          calendars_.add(value);
          onChanged();
        } else {
          calendarsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCalendars(
          int index, Calendar value) {
        if (calendarsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalendarsIsMutable();
          calendars_.add(index, value);
          onChanged();
        } else {
          calendarsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCalendars(
          Calendar.Builder builderForValue) {
        if (calendarsBuilder_ == null) {
          ensureCalendarsIsMutable();
          calendars_.add(builderForValue.build());
          onChanged();
        } else {
          calendarsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCalendars(
          int index, Calendar.Builder builderForValue) {
        if (calendarsBuilder_ == null) {
          ensureCalendarsIsMutable();
          calendars_.add(index, builderForValue.build());
          onChanged();
        } else {
          calendarsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCalendars(
          Iterable<? extends Calendar> values) {
        if (calendarsBuilder_ == null) {
          ensureCalendarsIsMutable();
          super.addAll(values, calendars_);
          onChanged();
        } else {
          calendarsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCalendars() {
        if (calendarsBuilder_ == null) {
          calendars_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          calendarsBuilder_.clear();
        }
        return this;
      }
      public Builder removeCalendars(int index) {
        if (calendarsBuilder_ == null) {
          ensureCalendarsIsMutable();
          calendars_.remove(index);
          onChanged();
        } else {
          calendarsBuilder_.remove(index);
        }
        return this;
      }
      public Calendar.Builder getCalendarsBuilder(
          int index) {
        return getCalendarsFieldBuilder().getBuilder(index);
      }
      public CalendarOrBuilder getCalendarsOrBuilder(
          int index) {
        if (calendarsBuilder_ == null) {
          return calendars_.get(index);  } else {
          return calendarsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends CalendarOrBuilder>
           getCalendarsOrBuilderList() {
        if (calendarsBuilder_ != null) {
          return calendarsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(calendars_);
        }
      }
      public Calendar.Builder addCalendarsBuilder() {
        return getCalendarsFieldBuilder().addBuilder(
            Calendar.getDefaultInstance());
      }
      public Calendar.Builder addCalendarsBuilder(
          int index) {
        return getCalendarsFieldBuilder().addBuilder(
            index, Calendar.getDefaultInstance());
      }
      public java.util.List<Calendar.Builder>
           getCalendarsBuilderList() {
        return getCalendarsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          Calendar, Calendar.Builder, CalendarOrBuilder>
          getCalendarsFieldBuilder() {
        if (calendarsBuilder_ == null) {
          calendarsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              Calendar, Calendar.Builder, CalendarOrBuilder>(
                  calendars_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          calendars_ = null;
        }
        return calendarsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:FindCalendarListRet)
    }
    
    static {
      defaultInstance = new FindCalendarListRet(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FindCalendarListRet)
  }
  
  public interface FindCalendarByIdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 calendarId = 1;
    boolean hasCalendarId();
    long getCalendarId();
  }
  public static final class FindCalendarById extends
      com.google.protobuf.GeneratedMessage
      implements FindCalendarByIdOrBuilder {
    // Use FindCalendarById.newBuilder() to construct.
    private FindCalendarById(Builder builder) {
      super(builder);
    }
    private FindCalendarById(boolean noInit) {}
    
    private static final FindCalendarById defaultInstance;
    public static FindCalendarById getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindCalendarById getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_FindCalendarById_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_FindCalendarById_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 calendarId = 1;
    public static final int CALENDARID_FIELD_NUMBER = 1;
    private long calendarId_;
    public boolean hasCalendarId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getCalendarId() {
      return calendarId_;
    }
    
    private void initFields() {
      calendarId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FindCalendarById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FindCalendarById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FindCalendarByIdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_FindCalendarById_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_FindCalendarById_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.FindCalendarById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        calendarId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FindCalendarById.getDescriptor();
      }
      
      public FindCalendarById getDefaultInstanceForType() {
        return FindCalendarById.getDefaultInstance();
      }
      
      public FindCalendarById build() {
        FindCalendarById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FindCalendarById buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FindCalendarById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FindCalendarById buildPartial() {
        FindCalendarById result = new FindCalendarById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarId_ = calendarId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FindCalendarById) {
          return mergeFrom((FindCalendarById)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FindCalendarById other) {
        if (other == FindCalendarById.getDefaultInstance()) return this;
        if (other.hasCalendarId()) {
          setCalendarId(other.getCalendarId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarId_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 calendarId = 1;
      private long calendarId_ ;
      public boolean hasCalendarId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getCalendarId() {
        return calendarId_;
      }
      public Builder setCalendarId(long value) {
        bitField0_ |= 0x00000001;
        calendarId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalendarId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarId_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FindCalendarById)
    }
    
    static {
      defaultInstance = new FindCalendarById(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FindCalendarById)
  }
  
  public interface FindCalendarByIdRetOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .Calendar Calendar = 1;
    boolean hasCalendar();
    Calendar getCalendar();
    CalendarOrBuilder getCalendarOrBuilder();
  }
  public static final class FindCalendarByIdRet extends
      com.google.protobuf.GeneratedMessage
      implements FindCalendarByIdRetOrBuilder {
    // Use FindCalendarByIdRet.newBuilder() to construct.
    private FindCalendarByIdRet(Builder builder) {
      super(builder);
    }
    private FindCalendarByIdRet(boolean noInit) {}
    
    private static final FindCalendarByIdRet defaultInstance;
    public static FindCalendarByIdRet getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindCalendarByIdRet getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_FindCalendarByIdRet_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_FindCalendarByIdRet_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .Calendar Calendar = 1;
    public static final int CALENDAR_FIELD_NUMBER = 1;
    private Calendar calendar_;
    public boolean hasCalendar() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public Calendar getCalendar() {
      return calendar_;
    }
    public CalendarOrBuilder getCalendarOrBuilder() {
      return calendar_;
    }
    
    private void initFields() {
      calendar_ = Calendar.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendar_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendar_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FindCalendarByIdRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarByIdRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarByIdRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarByIdRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarByIdRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarByIdRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarByIdRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarByIdRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarByIdRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarByIdRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FindCalendarByIdRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FindCalendarByIdRetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_FindCalendarByIdRet_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_FindCalendarByIdRet_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.FindCalendarByIdRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCalendarFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (calendarBuilder_ == null) {
          calendar_ = Calendar.getDefaultInstance();
        } else {
          calendarBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FindCalendarByIdRet.getDescriptor();
      }
      
      public FindCalendarByIdRet getDefaultInstanceForType() {
        return FindCalendarByIdRet.getDefaultInstance();
      }
      
      public FindCalendarByIdRet build() {
        FindCalendarByIdRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FindCalendarByIdRet buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FindCalendarByIdRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FindCalendarByIdRet buildPartial() {
        FindCalendarByIdRet result = new FindCalendarByIdRet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (calendarBuilder_ == null) {
          result.calendar_ = calendar_;
        } else {
          result.calendar_ = calendarBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FindCalendarByIdRet) {
          return mergeFrom((FindCalendarByIdRet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FindCalendarByIdRet other) {
        if (other == FindCalendarByIdRet.getDefaultInstance()) return this;
        if (other.hasCalendar()) {
          mergeCalendar(other.getCalendar());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              Calendar.Builder subBuilder = Calendar.newBuilder();
              if (hasCalendar()) {
                subBuilder.mergeFrom(getCalendar());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCalendar(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .Calendar Calendar = 1;
      private Calendar calendar_ = Calendar.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Calendar, Calendar.Builder, CalendarOrBuilder> calendarBuilder_;
      public boolean hasCalendar() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public Calendar getCalendar() {
        if (calendarBuilder_ == null) {
          return calendar_;
        } else {
          return calendarBuilder_.getMessage();
        }
      }
      public Builder setCalendar(Calendar value) {
        if (calendarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calendar_ = value;
          onChanged();
        } else {
          calendarBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCalendar(
          Calendar.Builder builderForValue) {
        if (calendarBuilder_ == null) {
          calendar_ = builderForValue.build();
          onChanged();
        } else {
          calendarBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCalendar(Calendar value) {
        if (calendarBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              calendar_ != Calendar.getDefaultInstance()) {
            calendar_ =
              Calendar.newBuilder(calendar_).mergeFrom(value).buildPartial();
          } else {
            calendar_ = value;
          }
          onChanged();
        } else {
          calendarBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCalendar() {
        if (calendarBuilder_ == null) {
          calendar_ = Calendar.getDefaultInstance();
          onChanged();
        } else {
          calendarBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public Calendar.Builder getCalendarBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCalendarFieldBuilder().getBuilder();
      }
      public CalendarOrBuilder getCalendarOrBuilder() {
        if (calendarBuilder_ != null) {
          return calendarBuilder_.getMessageOrBuilder();
        } else {
          return calendar_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Calendar, Calendar.Builder, CalendarOrBuilder>
          getCalendarFieldBuilder() {
        if (calendarBuilder_ == null) {
          calendarBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Calendar, Calendar.Builder, CalendarOrBuilder>(
                  calendar_,
                  getParentForChildren(),
                  isClean());
          calendar_ = null;
        }
        return calendarBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:FindCalendarByIdRet)
    }
    
    static {
      defaultInstance = new FindCalendarByIdRet(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FindCalendarByIdRet)
  }
  
  public interface AddCalendarOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .Calendar calendar = 1;
    boolean hasCalendar();
    Calendar getCalendar();
    CalendarOrBuilder getCalendarOrBuilder();
  }
  public static final class AddCalendar extends
      com.google.protobuf.GeneratedMessage
      implements AddCalendarOrBuilder {
    // Use AddCalendar.newBuilder() to construct.
    private AddCalendar(Builder builder) {
      super(builder);
    }
    private AddCalendar(boolean noInit) {}
    
    private static final AddCalendar defaultInstance;
    public static AddCalendar getDefaultInstance() {
      return defaultInstance;
    }
    
    public AddCalendar getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_AddCalendar_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_AddCalendar_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .Calendar calendar = 1;
    public static final int CALENDAR_FIELD_NUMBER = 1;
    private Calendar calendar_;
    public boolean hasCalendar() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public Calendar getCalendar() {
      return calendar_;
    }
    public CalendarOrBuilder getCalendarOrBuilder() {
      return calendar_;
    }
    
    private void initFields() {
      calendar_ = Calendar.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendar_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendar_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static AddCalendar parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static AddCalendar parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static AddCalendar parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static AddCalendar parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static AddCalendar parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static AddCalendar parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static AddCalendar parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static AddCalendar parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static AddCalendar parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static AddCalendar parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(AddCalendar prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements AddCalendarOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_AddCalendar_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_AddCalendar_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.AddCalendar.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCalendarFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (calendarBuilder_ == null) {
          calendar_ = Calendar.getDefaultInstance();
        } else {
          calendarBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return AddCalendar.getDescriptor();
      }
      
      public AddCalendar getDefaultInstanceForType() {
        return AddCalendar.getDefaultInstance();
      }
      
      public AddCalendar build() {
        AddCalendar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private AddCalendar buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        AddCalendar result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public AddCalendar buildPartial() {
        AddCalendar result = new AddCalendar(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (calendarBuilder_ == null) {
          result.calendar_ = calendar_;
        } else {
          result.calendar_ = calendarBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof AddCalendar) {
          return mergeFrom((AddCalendar)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(AddCalendar other) {
        if (other == AddCalendar.getDefaultInstance()) return this;
        if (other.hasCalendar()) {
          mergeCalendar(other.getCalendar());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              Calendar.Builder subBuilder = Calendar.newBuilder();
              if (hasCalendar()) {
                subBuilder.mergeFrom(getCalendar());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCalendar(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .Calendar calendar = 1;
      private Calendar calendar_ = Calendar.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Calendar, Calendar.Builder, CalendarOrBuilder> calendarBuilder_;
      public boolean hasCalendar() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public Calendar getCalendar() {
        if (calendarBuilder_ == null) {
          return calendar_;
        } else {
          return calendarBuilder_.getMessage();
        }
      }
      public Builder setCalendar(Calendar value) {
        if (calendarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calendar_ = value;
          onChanged();
        } else {
          calendarBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCalendar(
          Calendar.Builder builderForValue) {
        if (calendarBuilder_ == null) {
          calendar_ = builderForValue.build();
          onChanged();
        } else {
          calendarBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCalendar(Calendar value) {
        if (calendarBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              calendar_ != Calendar.getDefaultInstance()) {
            calendar_ =
              Calendar.newBuilder(calendar_).mergeFrom(value).buildPartial();
          } else {
            calendar_ = value;
          }
          onChanged();
        } else {
          calendarBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCalendar() {
        if (calendarBuilder_ == null) {
          calendar_ = Calendar.getDefaultInstance();
          onChanged();
        } else {
          calendarBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public Calendar.Builder getCalendarBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCalendarFieldBuilder().getBuilder();
      }
      public CalendarOrBuilder getCalendarOrBuilder() {
        if (calendarBuilder_ != null) {
          return calendarBuilder_.getMessageOrBuilder();
        } else {
          return calendar_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Calendar, Calendar.Builder, CalendarOrBuilder>
          getCalendarFieldBuilder() {
        if (calendarBuilder_ == null) {
          calendarBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Calendar, Calendar.Builder, CalendarOrBuilder>(
                  calendar_,
                  getParentForChildren(),
                  isClean());
          calendar_ = null;
        }
        return calendarBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:AddCalendar)
    }
    
    static {
      defaultInstance = new AddCalendar(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AddCalendar)
  }
  
  public interface EditCalendarByIdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .Calendar calendar = 1;
    boolean hasCalendar();
    Calendar getCalendar();
    CalendarOrBuilder getCalendarOrBuilder();
  }
  public static final class EditCalendarById extends
      com.google.protobuf.GeneratedMessage
      implements EditCalendarByIdOrBuilder {
    // Use EditCalendarById.newBuilder() to construct.
    private EditCalendarById(Builder builder) {
      super(builder);
    }
    private EditCalendarById(boolean noInit) {}
    
    private static final EditCalendarById defaultInstance;
    public static EditCalendarById getDefaultInstance() {
      return defaultInstance;
    }
    
    public EditCalendarById getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_EditCalendarById_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_EditCalendarById_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .Calendar calendar = 1;
    public static final int CALENDAR_FIELD_NUMBER = 1;
    private Calendar calendar_;
    public boolean hasCalendar() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public Calendar getCalendar() {
      return calendar_;
    }
    public CalendarOrBuilder getCalendarOrBuilder() {
      return calendar_;
    }
    
    private void initFields() {
      calendar_ = Calendar.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendar_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendar_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static EditCalendarById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static EditCalendarById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static EditCalendarById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static EditCalendarById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static EditCalendarById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static EditCalendarById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static EditCalendarById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static EditCalendarById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static EditCalendarById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static EditCalendarById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(EditCalendarById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements EditCalendarByIdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_EditCalendarById_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_EditCalendarById_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.EditCalendarById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCalendarFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (calendarBuilder_ == null) {
          calendar_ = Calendar.getDefaultInstance();
        } else {
          calendarBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EditCalendarById.getDescriptor();
      }
      
      public EditCalendarById getDefaultInstanceForType() {
        return EditCalendarById.getDefaultInstance();
      }
      
      public EditCalendarById build() {
        EditCalendarById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private EditCalendarById buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        EditCalendarById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public EditCalendarById buildPartial() {
        EditCalendarById result = new EditCalendarById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (calendarBuilder_ == null) {
          result.calendar_ = calendar_;
        } else {
          result.calendar_ = calendarBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EditCalendarById) {
          return mergeFrom((EditCalendarById)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(EditCalendarById other) {
        if (other == EditCalendarById.getDefaultInstance()) return this;
        if (other.hasCalendar()) {
          mergeCalendar(other.getCalendar());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              Calendar.Builder subBuilder = Calendar.newBuilder();
              if (hasCalendar()) {
                subBuilder.mergeFrom(getCalendar());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCalendar(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .Calendar calendar = 1;
      private Calendar calendar_ = Calendar.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Calendar, Calendar.Builder, CalendarOrBuilder> calendarBuilder_;
      public boolean hasCalendar() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public Calendar getCalendar() {
        if (calendarBuilder_ == null) {
          return calendar_;
        } else {
          return calendarBuilder_.getMessage();
        }
      }
      public Builder setCalendar(Calendar value) {
        if (calendarBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calendar_ = value;
          onChanged();
        } else {
          calendarBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCalendar(
          Calendar.Builder builderForValue) {
        if (calendarBuilder_ == null) {
          calendar_ = builderForValue.build();
          onChanged();
        } else {
          calendarBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCalendar(Calendar value) {
        if (calendarBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              calendar_ != Calendar.getDefaultInstance()) {
            calendar_ =
              Calendar.newBuilder(calendar_).mergeFrom(value).buildPartial();
          } else {
            calendar_ = value;
          }
          onChanged();
        } else {
          calendarBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCalendar() {
        if (calendarBuilder_ == null) {
          calendar_ = Calendar.getDefaultInstance();
          onChanged();
        } else {
          calendarBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public Calendar.Builder getCalendarBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCalendarFieldBuilder().getBuilder();
      }
      public CalendarOrBuilder getCalendarOrBuilder() {
        if (calendarBuilder_ != null) {
          return calendarBuilder_.getMessageOrBuilder();
        } else {
          return calendar_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Calendar, Calendar.Builder, CalendarOrBuilder>
          getCalendarFieldBuilder() {
        if (calendarBuilder_ == null) {
          calendarBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Calendar, Calendar.Builder, CalendarOrBuilder>(
                  calendar_,
                  getParentForChildren(),
                  isClean());
          calendar_ = null;
        }
        return calendarBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:EditCalendarById)
    }
    
    static {
      defaultInstance = new EditCalendarById(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EditCalendarById)
  }
  
  public interface DeleteCalendarByIdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 calendarId = 1;
    boolean hasCalendarId();
    long getCalendarId();
  }
  public static final class DeleteCalendarById extends
      com.google.protobuf.GeneratedMessage
      implements DeleteCalendarByIdOrBuilder {
    // Use DeleteCalendarById.newBuilder() to construct.
    private DeleteCalendarById(Builder builder) {
      super(builder);
    }
    private DeleteCalendarById(boolean noInit) {}
    
    private static final DeleteCalendarById defaultInstance;
    public static DeleteCalendarById getDefaultInstance() {
      return defaultInstance;
    }
    
    public DeleteCalendarById getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_DeleteCalendarById_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_DeleteCalendarById_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 calendarId = 1;
    public static final int CALENDARID_FIELD_NUMBER = 1;
    private long calendarId_;
    public boolean hasCalendarId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getCalendarId() {
      return calendarId_;
    }
    
    private void initFields() {
      calendarId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DeleteCalendarById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DeleteCalendarById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DeleteCalendarById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DeleteCalendarById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DeleteCalendarById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DeleteCalendarById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DeleteCalendarById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DeleteCalendarById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DeleteCalendarById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DeleteCalendarById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DeleteCalendarById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DeleteCalendarByIdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_DeleteCalendarById_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_DeleteCalendarById_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.DeleteCalendarById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        calendarId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DeleteCalendarById.getDescriptor();
      }
      
      public DeleteCalendarById getDefaultInstanceForType() {
        return DeleteCalendarById.getDefaultInstance();
      }
      
      public DeleteCalendarById build() {
        DeleteCalendarById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DeleteCalendarById buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DeleteCalendarById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DeleteCalendarById buildPartial() {
        DeleteCalendarById result = new DeleteCalendarById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarId_ = calendarId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DeleteCalendarById) {
          return mergeFrom((DeleteCalendarById)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DeleteCalendarById other) {
        if (other == DeleteCalendarById.getDefaultInstance()) return this;
        if (other.hasCalendarId()) {
          setCalendarId(other.getCalendarId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarId_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 calendarId = 1;
      private long calendarId_ ;
      public boolean hasCalendarId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getCalendarId() {
        return calendarId_;
      }
      public Builder setCalendarId(long value) {
        bitField0_ |= 0x00000001;
        calendarId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalendarId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarId_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:DeleteCalendarById)
    }
    
    static {
      defaultInstance = new DeleteCalendarById(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DeleteCalendarById)
  }
  
  public interface FindCalendarCategoryListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional string startTime = 1;
    boolean hasStartTime();
    String getStartTime();
    
    // optional string endTime = 2;
    boolean hasEndTime();
    String getEndTime();
    
    // optional string keyword = 3;
    boolean hasKeyword();
    String getKeyword();
  }
  public static final class FindCalendarCategoryList extends
      com.google.protobuf.GeneratedMessage
      implements FindCalendarCategoryListOrBuilder {
    // Use FindCalendarCategoryList.newBuilder() to construct.
    private FindCalendarCategoryList(Builder builder) {
      super(builder);
    }
    private FindCalendarCategoryList(boolean noInit) {}
    
    private static final FindCalendarCategoryList defaultInstance;
    public static FindCalendarCategoryList getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindCalendarCategoryList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_FindCalendarCategoryList_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_FindCalendarCategoryList_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional string startTime = 1;
    public static final int STARTTIME_FIELD_NUMBER = 1;
    private Object startTime_;
    public boolean hasStartTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getStartTime() {
      Object ref = startTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          startTime_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getStartTimeBytes() {
      Object ref = startTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        startTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string endTime = 2;
    public static final int ENDTIME_FIELD_NUMBER = 2;
    private Object endTime_;
    public boolean hasEndTime() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public String getEndTime() {
      Object ref = endTime_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          endTime_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getEndTimeBytes() {
      Object ref = endTime_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        endTime_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string keyword = 3;
    public static final int KEYWORD_FIELD_NUMBER = 3;
    private Object keyword_;
    public boolean hasKeyword() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getKeyword() {
      Object ref = keyword_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          keyword_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getKeywordBytes() {
      Object ref = keyword_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        keyword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      startTime_ = "";
      endTime_ = "";
      keyword_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getStartTimeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getEndTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getKeywordBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getStartTimeBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getEndTimeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getKeywordBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FindCalendarCategoryList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCategoryList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCategoryList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCategoryList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCategoryList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCategoryList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCategoryList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCategoryList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCategoryList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCategoryList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FindCalendarCategoryList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FindCalendarCategoryListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_FindCalendarCategoryList_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_FindCalendarCategoryList_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.FindCalendarCategoryList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        startTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        endTime_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        keyword_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FindCalendarCategoryList.getDescriptor();
      }
      
      public FindCalendarCategoryList getDefaultInstanceForType() {
        return FindCalendarCategoryList.getDefaultInstance();
      }
      
      public FindCalendarCategoryList build() {
        FindCalendarCategoryList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FindCalendarCategoryList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FindCalendarCategoryList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FindCalendarCategoryList buildPartial() {
        FindCalendarCategoryList result = new FindCalendarCategoryList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.startTime_ = startTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.endTime_ = endTime_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.keyword_ = keyword_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FindCalendarCategoryList) {
          return mergeFrom((FindCalendarCategoryList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FindCalendarCategoryList other) {
        if (other == FindCalendarCategoryList.getDefaultInstance()) return this;
        if (other.hasStartTime()) {
          setStartTime(other.getStartTime());
        }
        if (other.hasEndTime()) {
          setEndTime(other.getEndTime());
        }
        if (other.hasKeyword()) {
          setKeyword(other.getKeyword());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              startTime_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              endTime_ = input.readBytes();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              keyword_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional string startTime = 1;
      private Object startTime_ = "";
      public boolean hasStartTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getStartTime() {
        Object ref = startTime_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          startTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setStartTime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        startTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearStartTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        startTime_ = getDefaultInstance().getStartTime();
        onChanged();
        return this;
      }
      void setStartTime(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        startTime_ = value;
        onChanged();
      }
      
      // optional string endTime = 2;
      private Object endTime_ = "";
      public boolean hasEndTime() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public String getEndTime() {
        Object ref = endTime_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          endTime_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setEndTime(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        endTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearEndTime() {
        bitField0_ = (bitField0_ & ~0x00000002);
        endTime_ = getDefaultInstance().getEndTime();
        onChanged();
        return this;
      }
      void setEndTime(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000002;
        endTime_ = value;
        onChanged();
      }
      
      // optional string keyword = 3;
      private Object keyword_ = "";
      public boolean hasKeyword() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getKeyword() {
        Object ref = keyword_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          keyword_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setKeyword(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        keyword_ = value;
        onChanged();
        return this;
      }
      public Builder clearKeyword() {
        bitField0_ = (bitField0_ & ~0x00000004);
        keyword_ = getDefaultInstance().getKeyword();
        onChanged();
        return this;
      }
      void setKeyword(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        keyword_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:FindCalendarCategoryList)
    }
    
    static {
      defaultInstance = new FindCalendarCategoryList(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FindCalendarCategoryList)
  }
  
  public interface FindCalendarCategoryListRetOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .CalendarCategory calendarCategorys = 1;
    java.util.List<CalendarCategory>
        getCalendarCategorysList();
    CalendarCategory getCalendarCategorys(int index);
    int getCalendarCategorysCount();
    java.util.List<? extends CalendarCategoryOrBuilder>
        getCalendarCategorysOrBuilderList();
    CalendarCategoryOrBuilder getCalendarCategorysOrBuilder(
            int index);
  }
  public static final class FindCalendarCategoryListRet extends
      com.google.protobuf.GeneratedMessage
      implements FindCalendarCategoryListRetOrBuilder {
    // Use FindCalendarCategoryListRet.newBuilder() to construct.
    private FindCalendarCategoryListRet(Builder builder) {
      super(builder);
    }
    private FindCalendarCategoryListRet(boolean noInit) {}
    
    private static final FindCalendarCategoryListRet defaultInstance;
    public static FindCalendarCategoryListRet getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindCalendarCategoryListRet getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_FindCalendarCategoryListRet_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_FindCalendarCategoryListRet_fieldAccessorTable;
    }
    
    // repeated .CalendarCategory calendarCategorys = 1;
    public static final int CALENDARCATEGORYS_FIELD_NUMBER = 1;
    private java.util.List<CalendarCategory> calendarCategorys_;
    public java.util.List<CalendarCategory> getCalendarCategorysList() {
      return calendarCategorys_;
    }
    public java.util.List<? extends CalendarCategoryOrBuilder>
        getCalendarCategorysOrBuilderList() {
      return calendarCategorys_;
    }
    public int getCalendarCategorysCount() {
      return calendarCategorys_.size();
    }
    public CalendarCategory getCalendarCategorys(int index) {
      return calendarCategorys_.get(index);
    }
    public CalendarCategoryOrBuilder getCalendarCategorysOrBuilder(
        int index) {
      return calendarCategorys_.get(index);
    }
    
    private void initFields() {
      calendarCategorys_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < calendarCategorys_.size(); i++) {
        output.writeMessage(1, calendarCategorys_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < calendarCategorys_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarCategorys_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FindCalendarCategoryListRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCategoryListRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCategoryListRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCategoryListRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCategoryListRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCategoryListRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCategoryListRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCategoryListRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCategoryListRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCategoryListRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FindCalendarCategoryListRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FindCalendarCategoryListRetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_FindCalendarCategoryListRet_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_FindCalendarCategoryListRet_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.FindCalendarCategoryListRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCalendarCategorysFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (calendarCategorysBuilder_ == null) {
          calendarCategorys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          calendarCategorysBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FindCalendarCategoryListRet.getDescriptor();
      }
      
      public FindCalendarCategoryListRet getDefaultInstanceForType() {
        return FindCalendarCategoryListRet.getDefaultInstance();
      }
      
      public FindCalendarCategoryListRet build() {
        FindCalendarCategoryListRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FindCalendarCategoryListRet buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FindCalendarCategoryListRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FindCalendarCategoryListRet buildPartial() {
        FindCalendarCategoryListRet result = new FindCalendarCategoryListRet(this);
        int from_bitField0_ = bitField0_;
        if (calendarCategorysBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            calendarCategorys_ = java.util.Collections.unmodifiableList(calendarCategorys_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.calendarCategorys_ = calendarCategorys_;
        } else {
          result.calendarCategorys_ = calendarCategorysBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FindCalendarCategoryListRet) {
          return mergeFrom((FindCalendarCategoryListRet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FindCalendarCategoryListRet other) {
        if (other == FindCalendarCategoryListRet.getDefaultInstance()) return this;
        if (calendarCategorysBuilder_ == null) {
          if (!other.calendarCategorys_.isEmpty()) {
            if (calendarCategorys_.isEmpty()) {
              calendarCategorys_ = other.calendarCategorys_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCalendarCategorysIsMutable();
              calendarCategorys_.addAll(other.calendarCategorys_);
            }
            onChanged();
          }
        } else {
          if (!other.calendarCategorys_.isEmpty()) {
            if (calendarCategorysBuilder_.isEmpty()) {
              calendarCategorysBuilder_.dispose();
              calendarCategorysBuilder_ = null;
              calendarCategorys_ = other.calendarCategorys_;
              bitField0_ = (bitField0_ & ~0x00000001);
              calendarCategorysBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCalendarCategorysFieldBuilder() : null;
            } else {
              calendarCategorysBuilder_.addAllMessages(other.calendarCategorys_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              CalendarCategory.Builder subBuilder = CalendarCategory.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCalendarCategorys(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .CalendarCategory calendarCategorys = 1;
      private java.util.List<CalendarCategory> calendarCategorys_ =
        java.util.Collections.emptyList();
      private void ensureCalendarCategorysIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          calendarCategorys_ = new java.util.ArrayList<CalendarCategory>(calendarCategorys_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          CalendarCategory, CalendarCategory.Builder, CalendarCategoryOrBuilder> calendarCategorysBuilder_;
      
      public java.util.List<CalendarCategory> getCalendarCategorysList() {
        if (calendarCategorysBuilder_ == null) {
          return java.util.Collections.unmodifiableList(calendarCategorys_);
        } else {
          return calendarCategorysBuilder_.getMessageList();
        }
      }
      public int getCalendarCategorysCount() {
        if (calendarCategorysBuilder_ == null) {
          return calendarCategorys_.size();
        } else {
          return calendarCategorysBuilder_.getCount();
        }
      }
      public CalendarCategory getCalendarCategorys(int index) {
        if (calendarCategorysBuilder_ == null) {
          return calendarCategorys_.get(index);
        } else {
          return calendarCategorysBuilder_.getMessage(index);
        }
      }
      public Builder setCalendarCategorys(
          int index, CalendarCategory value) {
        if (calendarCategorysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalendarCategorysIsMutable();
          calendarCategorys_.set(index, value);
          onChanged();
        } else {
          calendarCategorysBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCalendarCategorys(
          int index, CalendarCategory.Builder builderForValue) {
        if (calendarCategorysBuilder_ == null) {
          ensureCalendarCategorysIsMutable();
          calendarCategorys_.set(index, builderForValue.build());
          onChanged();
        } else {
          calendarCategorysBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCalendarCategorys(CalendarCategory value) {
        if (calendarCategorysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalendarCategorysIsMutable();
          calendarCategorys_.add(value);
          onChanged();
        } else {
          calendarCategorysBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCalendarCategorys(
          int index, CalendarCategory value) {
        if (calendarCategorysBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalendarCategorysIsMutable();
          calendarCategorys_.add(index, value);
          onChanged();
        } else {
          calendarCategorysBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCalendarCategorys(
          CalendarCategory.Builder builderForValue) {
        if (calendarCategorysBuilder_ == null) {
          ensureCalendarCategorysIsMutable();
          calendarCategorys_.add(builderForValue.build());
          onChanged();
        } else {
          calendarCategorysBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCalendarCategorys(
          int index, CalendarCategory.Builder builderForValue) {
        if (calendarCategorysBuilder_ == null) {
          ensureCalendarCategorysIsMutable();
          calendarCategorys_.add(index, builderForValue.build());
          onChanged();
        } else {
          calendarCategorysBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCalendarCategorys(
          Iterable<? extends CalendarCategory> values) {
        if (calendarCategorysBuilder_ == null) {
          ensureCalendarCategorysIsMutable();
          super.addAll(values, calendarCategorys_);
          onChanged();
        } else {
          calendarCategorysBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCalendarCategorys() {
        if (calendarCategorysBuilder_ == null) {
          calendarCategorys_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          calendarCategorysBuilder_.clear();
        }
        return this;
      }
      public Builder removeCalendarCategorys(int index) {
        if (calendarCategorysBuilder_ == null) {
          ensureCalendarCategorysIsMutable();
          calendarCategorys_.remove(index);
          onChanged();
        } else {
          calendarCategorysBuilder_.remove(index);
        }
        return this;
      }
      public CalendarCategory.Builder getCalendarCategorysBuilder(
          int index) {
        return getCalendarCategorysFieldBuilder().getBuilder(index);
      }
      public CalendarCategoryOrBuilder getCalendarCategorysOrBuilder(
          int index) {
        if (calendarCategorysBuilder_ == null) {
          return calendarCategorys_.get(index);  } else {
          return calendarCategorysBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends CalendarCategoryOrBuilder>
           getCalendarCategorysOrBuilderList() {
        if (calendarCategorysBuilder_ != null) {
          return calendarCategorysBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(calendarCategorys_);
        }
      }
      public CalendarCategory.Builder addCalendarCategorysBuilder() {
        return getCalendarCategorysFieldBuilder().addBuilder(
            CalendarCategory.getDefaultInstance());
      }
      public CalendarCategory.Builder addCalendarCategorysBuilder(
          int index) {
        return getCalendarCategorysFieldBuilder().addBuilder(
            index, CalendarCategory.getDefaultInstance());
      }
      public java.util.List<CalendarCategory.Builder>
           getCalendarCategorysBuilderList() {
        return getCalendarCategorysFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          CalendarCategory, CalendarCategory.Builder, CalendarCategoryOrBuilder>
          getCalendarCategorysFieldBuilder() {
        if (calendarCategorysBuilder_ == null) {
          calendarCategorysBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              CalendarCategory, CalendarCategory.Builder, CalendarCategoryOrBuilder>(
                  calendarCategorys_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          calendarCategorys_ = null;
        }
        return calendarCategorysBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:FindCalendarCategoryListRet)
    }
    
    static {
      defaultInstance = new FindCalendarCategoryListRet(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FindCalendarCategoryListRet)
  }
  
  public interface CalendarCategoryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 id = 1;
    boolean hasId();
    long getId();
    
    // optional int64 userId = 2;
    boolean hasUserId();
    long getUserId();
    
    // optional string name = 3;
    boolean hasName();
    String getName();
    
    // optional int32 showOrder = 4;
    boolean hasShowOrder();
    int getShowOrder();
    
    // optional int32 enabled = 5;
    boolean hasEnabled();
    int getEnabled();
    
    // optional int64 createTime = 6;
    boolean hasCreateTime();
    long getCreateTime();
    
    // optional string createBy = 7;
    boolean hasCreateBy();
    String getCreateBy();
    
    // optional int64 updateTime = 8;
    boolean hasUpdateTime();
    long getUpdateTime();
    
    // optional string updateBy = 9;
    boolean hasUpdateBy();
    String getUpdateBy();
  }
  public static final class CalendarCategory extends
      com.google.protobuf.GeneratedMessage
      implements CalendarCategoryOrBuilder {
    // Use CalendarCategory.newBuilder() to construct.
    private CalendarCategory(Builder builder) {
      super(builder);
    }
    private CalendarCategory(boolean noInit) {}
    
    private static final CalendarCategory defaultInstance;
    public static CalendarCategory getDefaultInstance() {
      return defaultInstance;
    }
    
    public CalendarCategory getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_CalendarCategory_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_CalendarCategory_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getId() {
      return id_;
    }
    
    // optional int64 userId = 2;
    public static final int USERID_FIELD_NUMBER = 2;
    private long userId_;
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getUserId() {
      return userId_;
    }
    
    // optional string name = 3;
    public static final int NAME_FIELD_NUMBER = 3;
    private Object name_;
    public boolean hasName() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public String getName() {
      Object ref = name_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          name_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getNameBytes() {
      Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 showOrder = 4;
    public static final int SHOWORDER_FIELD_NUMBER = 4;
    private int showOrder_;
    public boolean hasShowOrder() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public int getShowOrder() {
      return showOrder_;
    }
    
    // optional int32 enabled = 5;
    public static final int ENABLED_FIELD_NUMBER = 5;
    private int enabled_;
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public int getEnabled() {
      return enabled_;
    }
    
    // optional int64 createTime = 6;
    public static final int CREATETIME_FIELD_NUMBER = 6;
    private long createTime_;
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public long getCreateTime() {
      return createTime_;
    }
    
    // optional string createBy = 7;
    public static final int CREATEBY_FIELD_NUMBER = 7;
    private Object createBy_;
    public boolean hasCreateBy() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getCreateBy() {
      Object ref = createBy_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          createBy_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCreateByBytes() {
      Object ref = createBy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        createBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int64 updateTime = 8;
    public static final int UPDATETIME_FIELD_NUMBER = 8;
    private long updateTime_;
    public boolean hasUpdateTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public long getUpdateTime() {
      return updateTime_;
    }
    
    // optional string updateBy = 9;
    public static final int UPDATEBY_FIELD_NUMBER = 9;
    private Object updateBy_;
    public boolean hasUpdateBy() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public String getUpdateBy() {
      Object ref = updateBy_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          updateBy_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUpdateByBytes() {
      Object ref = updateBy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        updateBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      id_ = 0L;
      userId_ = 0L;
      name_ = "";
      showOrder_ = 0;
      enabled_ = 0;
      createTime_ = 0L;
      createBy_ = "";
      updateTime_ = 0L;
      updateBy_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, showOrder_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, enabled_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt64(6, createTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getCreateByBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(8, updateTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getUpdateByBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNameBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, showOrder_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, enabled_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, createTime_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getCreateByBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(8, updateTime_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getUpdateByBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static CalendarCategory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static CalendarCategory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static CalendarCategory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static CalendarCategory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static CalendarCategory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static CalendarCategory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static CalendarCategory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static CalendarCategory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static CalendarCategory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static CalendarCategory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(CalendarCategory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements CalendarCategoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_CalendarCategory_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_CalendarCategory_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.CalendarCategory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        showOrder_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        enabled_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        createBy_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        updateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        updateBy_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalendarCategory.getDescriptor();
      }
      
      public CalendarCategory getDefaultInstanceForType() {
        return CalendarCategory.getDefaultInstance();
      }
      
      public CalendarCategory build() {
        CalendarCategory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private CalendarCategory buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        CalendarCategory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public CalendarCategory buildPartial() {
        CalendarCategory result = new CalendarCategory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.showOrder_ = showOrder_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.enabled_ = enabled_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.createBy_ = createBy_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.updateTime_ = updateTime_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.updateBy_ = updateBy_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalendarCategory) {
          return mergeFrom((CalendarCategory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(CalendarCategory other) {
        if (other == CalendarCategory.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasShowOrder()) {
          setShowOrder(other.getShowOrder());
        }
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasCreateBy()) {
          setCreateBy(other.getCreateBy());
        }
        if (other.hasUpdateTime()) {
          setUpdateTime(other.getUpdateTime());
        }
        if (other.hasUpdateBy()) {
          setUpdateBy(other.getUpdateBy());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              userId_ = input.readInt64();
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              name_ = input.readBytes();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              showOrder_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              enabled_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              createTime_ = input.readInt64();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000040;
              createBy_ = input.readBytes();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              updateTime_ = input.readInt64();
              break;
            }
            case 74: {
              bitField0_ |= 0x00000100;
              updateBy_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 id = 1;
      private long id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getId() {
        return id_;
      }
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 userId = 2;
      private long userId_ ;
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getUserId() {
        return userId_;
      }
      public Builder setUserId(long value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        onChanged();
        return this;
      }
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string name = 3;
      private Object name_ = "";
      public boolean hasName() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public String getName() {
        Object ref = name_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setName(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
        return this;
      }
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      void setName(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000004;
        name_ = value;
        onChanged();
      }
      
      // optional int32 showOrder = 4;
      private int showOrder_ ;
      public boolean hasShowOrder() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public int getShowOrder() {
        return showOrder_;
      }
      public Builder setShowOrder(int value) {
        bitField0_ |= 0x00000008;
        showOrder_ = value;
        onChanged();
        return this;
      }
      public Builder clearShowOrder() {
        bitField0_ = (bitField0_ & ~0x00000008);
        showOrder_ = 0;
        onChanged();
        return this;
      }
      
      // optional int32 enabled = 5;
      private int enabled_ ;
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public int getEnabled() {
        return enabled_;
      }
      public Builder setEnabled(int value) {
        bitField0_ |= 0x00000010;
        enabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000010);
        enabled_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 createTime = 6;
      private long createTime_ ;
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public long getCreateTime() {
        return createTime_;
      }
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00000020;
        createTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000020);
        createTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string createBy = 7;
      private Object createBy_ = "";
      public boolean hasCreateBy() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getCreateBy() {
        Object ref = createBy_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          createBy_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCreateBy(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        createBy_ = value;
        onChanged();
        return this;
      }
      public Builder clearCreateBy() {
        bitField0_ = (bitField0_ & ~0x00000040);
        createBy_ = getDefaultInstance().getCreateBy();
        onChanged();
        return this;
      }
      void setCreateBy(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        createBy_ = value;
        onChanged();
      }
      
      // optional int64 updateTime = 8;
      private long updateTime_ ;
      public boolean hasUpdateTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public long getUpdateTime() {
        return updateTime_;
      }
      public Builder setUpdateTime(long value) {
        bitField0_ |= 0x00000080;
        updateTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearUpdateTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        updateTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string updateBy = 9;
      private Object updateBy_ = "";
      public boolean hasUpdateBy() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public String getUpdateBy() {
        Object ref = updateBy_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          updateBy_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUpdateBy(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        updateBy_ = value;
        onChanged();
        return this;
      }
      public Builder clearUpdateBy() {
        bitField0_ = (bitField0_ & ~0x00000100);
        updateBy_ = getDefaultInstance().getUpdateBy();
        onChanged();
        return this;
      }
      void setUpdateBy(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000100;
        updateBy_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:CalendarCategory)
    }
    
    static {
      defaultInstance = new CalendarCategory(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CalendarCategory)
  }
  
  public interface FindCalendarCategoryByIdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 calendarCategoryId = 1;
    boolean hasCalendarCategoryId();
    long getCalendarCategoryId();
  }
  public static final class FindCalendarCategoryById extends
      com.google.protobuf.GeneratedMessage
      implements FindCalendarCategoryByIdOrBuilder {
    // Use FindCalendarCategoryById.newBuilder() to construct.
    private FindCalendarCategoryById(Builder builder) {
      super(builder);
    }
    private FindCalendarCategoryById(boolean noInit) {}
    
    private static final FindCalendarCategoryById defaultInstance;
    public static FindCalendarCategoryById getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindCalendarCategoryById getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_FindCalendarCategoryById_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_FindCalendarCategoryById_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 calendarCategoryId = 1;
    public static final int CALENDARCATEGORYID_FIELD_NUMBER = 1;
    private long calendarCategoryId_;
    public boolean hasCalendarCategoryId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getCalendarCategoryId() {
      return calendarCategoryId_;
    }
    
    private void initFields() {
      calendarCategoryId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarCategoryId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarCategoryId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FindCalendarCategoryById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCategoryById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCategoryById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCategoryById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCategoryById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCategoryById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCategoryById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCategoryById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCategoryById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCategoryById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FindCalendarCategoryById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FindCalendarCategoryByIdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_FindCalendarCategoryById_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_FindCalendarCategoryById_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.FindCalendarCategoryById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        calendarCategoryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FindCalendarCategoryById.getDescriptor();
      }
      
      public FindCalendarCategoryById getDefaultInstanceForType() {
        return FindCalendarCategoryById.getDefaultInstance();
      }
      
      public FindCalendarCategoryById build() {
        FindCalendarCategoryById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FindCalendarCategoryById buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FindCalendarCategoryById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FindCalendarCategoryById buildPartial() {
        FindCalendarCategoryById result = new FindCalendarCategoryById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarCategoryId_ = calendarCategoryId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FindCalendarCategoryById) {
          return mergeFrom((FindCalendarCategoryById)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FindCalendarCategoryById other) {
        if (other == FindCalendarCategoryById.getDefaultInstance()) return this;
        if (other.hasCalendarCategoryId()) {
          setCalendarCategoryId(other.getCalendarCategoryId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarCategoryId_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 calendarCategoryId = 1;
      private long calendarCategoryId_ ;
      public boolean hasCalendarCategoryId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getCalendarCategoryId() {
        return calendarCategoryId_;
      }
      public Builder setCalendarCategoryId(long value) {
        bitField0_ |= 0x00000001;
        calendarCategoryId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalendarCategoryId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarCategoryId_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FindCalendarCategoryById)
    }
    
    static {
      defaultInstance = new FindCalendarCategoryById(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FindCalendarCategoryById)
  }
  
  public interface FindCalendarCategoryByIdRetOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .CalendarCategory calendarCategory = 1;
    boolean hasCalendarCategory();
    CalendarCategory getCalendarCategory();
    CalendarCategoryOrBuilder getCalendarCategoryOrBuilder();
  }
  public static final class FindCalendarCategoryByIdRet extends
      com.google.protobuf.GeneratedMessage
      implements FindCalendarCategoryByIdRetOrBuilder {
    // Use FindCalendarCategoryByIdRet.newBuilder() to construct.
    private FindCalendarCategoryByIdRet(Builder builder) {
      super(builder);
    }
    private FindCalendarCategoryByIdRet(boolean noInit) {}
    
    private static final FindCalendarCategoryByIdRet defaultInstance;
    public static FindCalendarCategoryByIdRet getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindCalendarCategoryByIdRet getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_FindCalendarCategoryByIdRet_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_FindCalendarCategoryByIdRet_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .CalendarCategory calendarCategory = 1;
    public static final int CALENDARCATEGORY_FIELD_NUMBER = 1;
    private CalendarCategory calendarCategory_;
    public boolean hasCalendarCategory() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public CalendarCategory getCalendarCategory() {
      return calendarCategory_;
    }
    public CalendarCategoryOrBuilder getCalendarCategoryOrBuilder() {
      return calendarCategory_;
    }
    
    private void initFields() {
      calendarCategory_ = CalendarCategory.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendarCategory_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarCategory_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FindCalendarCategoryByIdRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCategoryByIdRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCategoryByIdRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCategoryByIdRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCategoryByIdRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCategoryByIdRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCategoryByIdRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCategoryByIdRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCategoryByIdRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCategoryByIdRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FindCalendarCategoryByIdRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FindCalendarCategoryByIdRetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_FindCalendarCategoryByIdRet_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_FindCalendarCategoryByIdRet_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.FindCalendarCategoryByIdRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCalendarCategoryFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (calendarCategoryBuilder_ == null) {
          calendarCategory_ = CalendarCategory.getDefaultInstance();
        } else {
          calendarCategoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FindCalendarCategoryByIdRet.getDescriptor();
      }
      
      public FindCalendarCategoryByIdRet getDefaultInstanceForType() {
        return FindCalendarCategoryByIdRet.getDefaultInstance();
      }
      
      public FindCalendarCategoryByIdRet build() {
        FindCalendarCategoryByIdRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FindCalendarCategoryByIdRet buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FindCalendarCategoryByIdRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FindCalendarCategoryByIdRet buildPartial() {
        FindCalendarCategoryByIdRet result = new FindCalendarCategoryByIdRet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (calendarCategoryBuilder_ == null) {
          result.calendarCategory_ = calendarCategory_;
        } else {
          result.calendarCategory_ = calendarCategoryBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FindCalendarCategoryByIdRet) {
          return mergeFrom((FindCalendarCategoryByIdRet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FindCalendarCategoryByIdRet other) {
        if (other == FindCalendarCategoryByIdRet.getDefaultInstance()) return this;
        if (other.hasCalendarCategory()) {
          mergeCalendarCategory(other.getCalendarCategory());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              CalendarCategory.Builder subBuilder = CalendarCategory.newBuilder();
              if (hasCalendarCategory()) {
                subBuilder.mergeFrom(getCalendarCategory());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCalendarCategory(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .CalendarCategory calendarCategory = 1;
      private CalendarCategory calendarCategory_ = CalendarCategory.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          CalendarCategory, CalendarCategory.Builder, CalendarCategoryOrBuilder> calendarCategoryBuilder_;
      public boolean hasCalendarCategory() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public CalendarCategory getCalendarCategory() {
        if (calendarCategoryBuilder_ == null) {
          return calendarCategory_;
        } else {
          return calendarCategoryBuilder_.getMessage();
        }
      }
      public Builder setCalendarCategory(CalendarCategory value) {
        if (calendarCategoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calendarCategory_ = value;
          onChanged();
        } else {
          calendarCategoryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCalendarCategory(
          CalendarCategory.Builder builderForValue) {
        if (calendarCategoryBuilder_ == null) {
          calendarCategory_ = builderForValue.build();
          onChanged();
        } else {
          calendarCategoryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCalendarCategory(CalendarCategory value) {
        if (calendarCategoryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              calendarCategory_ != CalendarCategory.getDefaultInstance()) {
            calendarCategory_ =
              CalendarCategory.newBuilder(calendarCategory_).mergeFrom(value).buildPartial();
          } else {
            calendarCategory_ = value;
          }
          onChanged();
        } else {
          calendarCategoryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCalendarCategory() {
        if (calendarCategoryBuilder_ == null) {
          calendarCategory_ = CalendarCategory.getDefaultInstance();
          onChanged();
        } else {
          calendarCategoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public CalendarCategory.Builder getCalendarCategoryBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCalendarCategoryFieldBuilder().getBuilder();
      }
      public CalendarCategoryOrBuilder getCalendarCategoryOrBuilder() {
        if (calendarCategoryBuilder_ != null) {
          return calendarCategoryBuilder_.getMessageOrBuilder();
        } else {
          return calendarCategory_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          CalendarCategory, CalendarCategory.Builder, CalendarCategoryOrBuilder>
          getCalendarCategoryFieldBuilder() {
        if (calendarCategoryBuilder_ == null) {
          calendarCategoryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              CalendarCategory, CalendarCategory.Builder, CalendarCategoryOrBuilder>(
                  calendarCategory_,
                  getParentForChildren(),
                  isClean());
          calendarCategory_ = null;
        }
        return calendarCategoryBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:FindCalendarCategoryByIdRet)
    }
    
    static {
      defaultInstance = new FindCalendarCategoryByIdRet(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FindCalendarCategoryByIdRet)
  }
  
  public interface AddCalendarCategoryOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .CalendarCategory calendarCategory = 1;
    boolean hasCalendarCategory();
    CalendarCategory getCalendarCategory();
    CalendarCategoryOrBuilder getCalendarCategoryOrBuilder();
  }
  public static final class AddCalendarCategory extends
      com.google.protobuf.GeneratedMessage
      implements AddCalendarCategoryOrBuilder {
    // Use AddCalendarCategory.newBuilder() to construct.
    private AddCalendarCategory(Builder builder) {
      super(builder);
    }
    private AddCalendarCategory(boolean noInit) {}
    
    private static final AddCalendarCategory defaultInstance;
    public static AddCalendarCategory getDefaultInstance() {
      return defaultInstance;
    }
    
    public AddCalendarCategory getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_AddCalendarCategory_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_AddCalendarCategory_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .CalendarCategory calendarCategory = 1;
    public static final int CALENDARCATEGORY_FIELD_NUMBER = 1;
    private CalendarCategory calendarCategory_;
    public boolean hasCalendarCategory() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public CalendarCategory getCalendarCategory() {
      return calendarCategory_;
    }
    public CalendarCategoryOrBuilder getCalendarCategoryOrBuilder() {
      return calendarCategory_;
    }
    
    private void initFields() {
      calendarCategory_ = CalendarCategory.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendarCategory_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarCategory_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static AddCalendarCategory parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static AddCalendarCategory parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static AddCalendarCategory parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static AddCalendarCategory parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static AddCalendarCategory parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static AddCalendarCategory parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static AddCalendarCategory parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static AddCalendarCategory parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static AddCalendarCategory parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static AddCalendarCategory parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(AddCalendarCategory prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements AddCalendarCategoryOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_AddCalendarCategory_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_AddCalendarCategory_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.AddCalendarCategory.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCalendarCategoryFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (calendarCategoryBuilder_ == null) {
          calendarCategory_ = CalendarCategory.getDefaultInstance();
        } else {
          calendarCategoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return AddCalendarCategory.getDescriptor();
      }
      
      public AddCalendarCategory getDefaultInstanceForType() {
        return AddCalendarCategory.getDefaultInstance();
      }
      
      public AddCalendarCategory build() {
        AddCalendarCategory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private AddCalendarCategory buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        AddCalendarCategory result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public AddCalendarCategory buildPartial() {
        AddCalendarCategory result = new AddCalendarCategory(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (calendarCategoryBuilder_ == null) {
          result.calendarCategory_ = calendarCategory_;
        } else {
          result.calendarCategory_ = calendarCategoryBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof AddCalendarCategory) {
          return mergeFrom((AddCalendarCategory)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(AddCalendarCategory other) {
        if (other == AddCalendarCategory.getDefaultInstance()) return this;
        if (other.hasCalendarCategory()) {
          mergeCalendarCategory(other.getCalendarCategory());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              CalendarCategory.Builder subBuilder = CalendarCategory.newBuilder();
              if (hasCalendarCategory()) {
                subBuilder.mergeFrom(getCalendarCategory());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCalendarCategory(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .CalendarCategory calendarCategory = 1;
      private CalendarCategory calendarCategory_ = CalendarCategory.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          CalendarCategory, CalendarCategory.Builder, CalendarCategoryOrBuilder> calendarCategoryBuilder_;
      public boolean hasCalendarCategory() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public CalendarCategory getCalendarCategory() {
        if (calendarCategoryBuilder_ == null) {
          return calendarCategory_;
        } else {
          return calendarCategoryBuilder_.getMessage();
        }
      }
      public Builder setCalendarCategory(CalendarCategory value) {
        if (calendarCategoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calendarCategory_ = value;
          onChanged();
        } else {
          calendarCategoryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCalendarCategory(
          CalendarCategory.Builder builderForValue) {
        if (calendarCategoryBuilder_ == null) {
          calendarCategory_ = builderForValue.build();
          onChanged();
        } else {
          calendarCategoryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCalendarCategory(CalendarCategory value) {
        if (calendarCategoryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              calendarCategory_ != CalendarCategory.getDefaultInstance()) {
            calendarCategory_ =
              CalendarCategory.newBuilder(calendarCategory_).mergeFrom(value).buildPartial();
          } else {
            calendarCategory_ = value;
          }
          onChanged();
        } else {
          calendarCategoryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCalendarCategory() {
        if (calendarCategoryBuilder_ == null) {
          calendarCategory_ = CalendarCategory.getDefaultInstance();
          onChanged();
        } else {
          calendarCategoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public CalendarCategory.Builder getCalendarCategoryBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCalendarCategoryFieldBuilder().getBuilder();
      }
      public CalendarCategoryOrBuilder getCalendarCategoryOrBuilder() {
        if (calendarCategoryBuilder_ != null) {
          return calendarCategoryBuilder_.getMessageOrBuilder();
        } else {
          return calendarCategory_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          CalendarCategory, CalendarCategory.Builder, CalendarCategoryOrBuilder>
          getCalendarCategoryFieldBuilder() {
        if (calendarCategoryBuilder_ == null) {
          calendarCategoryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              CalendarCategory, CalendarCategory.Builder, CalendarCategoryOrBuilder>(
                  calendarCategory_,
                  getParentForChildren(),
                  isClean());
          calendarCategory_ = null;
        }
        return calendarCategoryBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:AddCalendarCategory)
    }
    
    static {
      defaultInstance = new AddCalendarCategory(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AddCalendarCategory)
  }
  
  public interface EditCalendarCategoryByIdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .CalendarCategory calendarCategory = 1;
    boolean hasCalendarCategory();
    CalendarCategory getCalendarCategory();
    CalendarCategoryOrBuilder getCalendarCategoryOrBuilder();
  }
  public static final class EditCalendarCategoryById extends
      com.google.protobuf.GeneratedMessage
      implements EditCalendarCategoryByIdOrBuilder {
    // Use EditCalendarCategoryById.newBuilder() to construct.
    private EditCalendarCategoryById(Builder builder) {
      super(builder);
    }
    private EditCalendarCategoryById(boolean noInit) {}
    
    private static final EditCalendarCategoryById defaultInstance;
    public static EditCalendarCategoryById getDefaultInstance() {
      return defaultInstance;
    }
    
    public EditCalendarCategoryById getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_EditCalendarCategoryById_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_EditCalendarCategoryById_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .CalendarCategory calendarCategory = 1;
    public static final int CALENDARCATEGORY_FIELD_NUMBER = 1;
    private CalendarCategory calendarCategory_;
    public boolean hasCalendarCategory() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public CalendarCategory getCalendarCategory() {
      return calendarCategory_;
    }
    public CalendarCategoryOrBuilder getCalendarCategoryOrBuilder() {
      return calendarCategory_;
    }
    
    private void initFields() {
      calendarCategory_ = CalendarCategory.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendarCategory_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarCategory_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static EditCalendarCategoryById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static EditCalendarCategoryById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static EditCalendarCategoryById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static EditCalendarCategoryById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static EditCalendarCategoryById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static EditCalendarCategoryById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static EditCalendarCategoryById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static EditCalendarCategoryById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static EditCalendarCategoryById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static EditCalendarCategoryById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(EditCalendarCategoryById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements EditCalendarCategoryByIdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_EditCalendarCategoryById_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_EditCalendarCategoryById_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.EditCalendarCategoryById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCalendarCategoryFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (calendarCategoryBuilder_ == null) {
          calendarCategory_ = CalendarCategory.getDefaultInstance();
        } else {
          calendarCategoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return EditCalendarCategoryById.getDescriptor();
      }
      
      public EditCalendarCategoryById getDefaultInstanceForType() {
        return EditCalendarCategoryById.getDefaultInstance();
      }
      
      public EditCalendarCategoryById build() {
        EditCalendarCategoryById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private EditCalendarCategoryById buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        EditCalendarCategoryById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public EditCalendarCategoryById buildPartial() {
        EditCalendarCategoryById result = new EditCalendarCategoryById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (calendarCategoryBuilder_ == null) {
          result.calendarCategory_ = calendarCategory_;
        } else {
          result.calendarCategory_ = calendarCategoryBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof EditCalendarCategoryById) {
          return mergeFrom((EditCalendarCategoryById)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(EditCalendarCategoryById other) {
        if (other == EditCalendarCategoryById.getDefaultInstance()) return this;
        if (other.hasCalendarCategory()) {
          mergeCalendarCategory(other.getCalendarCategory());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              CalendarCategory.Builder subBuilder = CalendarCategory.newBuilder();
              if (hasCalendarCategory()) {
                subBuilder.mergeFrom(getCalendarCategory());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCalendarCategory(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .CalendarCategory calendarCategory = 1;
      private CalendarCategory calendarCategory_ = CalendarCategory.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          CalendarCategory, CalendarCategory.Builder, CalendarCategoryOrBuilder> calendarCategoryBuilder_;
      public boolean hasCalendarCategory() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public CalendarCategory getCalendarCategory() {
        if (calendarCategoryBuilder_ == null) {
          return calendarCategory_;
        } else {
          return calendarCategoryBuilder_.getMessage();
        }
      }
      public Builder setCalendarCategory(CalendarCategory value) {
        if (calendarCategoryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calendarCategory_ = value;
          onChanged();
        } else {
          calendarCategoryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCalendarCategory(
          CalendarCategory.Builder builderForValue) {
        if (calendarCategoryBuilder_ == null) {
          calendarCategory_ = builderForValue.build();
          onChanged();
        } else {
          calendarCategoryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCalendarCategory(CalendarCategory value) {
        if (calendarCategoryBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              calendarCategory_ != CalendarCategory.getDefaultInstance()) {
            calendarCategory_ =
              CalendarCategory.newBuilder(calendarCategory_).mergeFrom(value).buildPartial();
          } else {
            calendarCategory_ = value;
          }
          onChanged();
        } else {
          calendarCategoryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCalendarCategory() {
        if (calendarCategoryBuilder_ == null) {
          calendarCategory_ = CalendarCategory.getDefaultInstance();
          onChanged();
        } else {
          calendarCategoryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public CalendarCategory.Builder getCalendarCategoryBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCalendarCategoryFieldBuilder().getBuilder();
      }
      public CalendarCategoryOrBuilder getCalendarCategoryOrBuilder() {
        if (calendarCategoryBuilder_ != null) {
          return calendarCategoryBuilder_.getMessageOrBuilder();
        } else {
          return calendarCategory_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          CalendarCategory, CalendarCategory.Builder, CalendarCategoryOrBuilder>
          getCalendarCategoryFieldBuilder() {
        if (calendarCategoryBuilder_ == null) {
          calendarCategoryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              CalendarCategory, CalendarCategory.Builder, CalendarCategoryOrBuilder>(
                  calendarCategory_,
                  getParentForChildren(),
                  isClean());
          calendarCategory_ = null;
        }
        return calendarCategoryBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:EditCalendarCategoryById)
    }
    
    static {
      defaultInstance = new EditCalendarCategoryById(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EditCalendarCategoryById)
  }
  
  public interface DeleteCalendarCategoryByIdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 calendarCategoryId = 1;
    boolean hasCalendarCategoryId();
    long getCalendarCategoryId();
  }
  public static final class DeleteCalendarCategoryById extends
      com.google.protobuf.GeneratedMessage
      implements DeleteCalendarCategoryByIdOrBuilder {
    // Use DeleteCalendarCategoryById.newBuilder() to construct.
    private DeleteCalendarCategoryById(Builder builder) {
      super(builder);
    }
    private DeleteCalendarCategoryById(boolean noInit) {}
    
    private static final DeleteCalendarCategoryById defaultInstance;
    public static DeleteCalendarCategoryById getDefaultInstance() {
      return defaultInstance;
    }
    
    public DeleteCalendarCategoryById getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_DeleteCalendarCategoryById_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_DeleteCalendarCategoryById_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 calendarCategoryId = 1;
    public static final int CALENDARCATEGORYID_FIELD_NUMBER = 1;
    private long calendarCategoryId_;
    public boolean hasCalendarCategoryId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getCalendarCategoryId() {
      return calendarCategoryId_;
    }
    
    private void initFields() {
      calendarCategoryId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarCategoryId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarCategoryId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DeleteCalendarCategoryById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DeleteCalendarCategoryById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DeleteCalendarCategoryById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DeleteCalendarCategoryById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DeleteCalendarCategoryById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DeleteCalendarCategoryById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DeleteCalendarCategoryById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DeleteCalendarCategoryById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DeleteCalendarCategoryById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DeleteCalendarCategoryById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DeleteCalendarCategoryById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DeleteCalendarCategoryByIdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_DeleteCalendarCategoryById_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_DeleteCalendarCategoryById_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.DeleteCalendarCategoryById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        calendarCategoryId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DeleteCalendarCategoryById.getDescriptor();
      }
      
      public DeleteCalendarCategoryById getDefaultInstanceForType() {
        return DeleteCalendarCategoryById.getDefaultInstance();
      }
      
      public DeleteCalendarCategoryById build() {
        DeleteCalendarCategoryById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DeleteCalendarCategoryById buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DeleteCalendarCategoryById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DeleteCalendarCategoryById buildPartial() {
        DeleteCalendarCategoryById result = new DeleteCalendarCategoryById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarCategoryId_ = calendarCategoryId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DeleteCalendarCategoryById) {
          return mergeFrom((DeleteCalendarCategoryById)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DeleteCalendarCategoryById other) {
        if (other == DeleteCalendarCategoryById.getDefaultInstance()) return this;
        if (other.hasCalendarCategoryId()) {
          setCalendarCategoryId(other.getCalendarCategoryId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarCategoryId_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 calendarCategoryId = 1;
      private long calendarCategoryId_ ;
      public boolean hasCalendarCategoryId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getCalendarCategoryId() {
        return calendarCategoryId_;
      }
      public Builder setCalendarCategoryId(long value) {
        bitField0_ |= 0x00000001;
        calendarCategoryId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalendarCategoryId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarCategoryId_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:DeleteCalendarCategoryById)
    }
    
    static {
      defaultInstance = new DeleteCalendarCategoryById(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DeleteCalendarCategoryById)
  }
  
  public interface FindCalendarCommentListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 calendarId = 3;
    boolean hasCalendarId();
    long getCalendarId();
  }
  public static final class FindCalendarCommentList extends
      com.google.protobuf.GeneratedMessage
      implements FindCalendarCommentListOrBuilder {
    // Use FindCalendarCommentList.newBuilder() to construct.
    private FindCalendarCommentList(Builder builder) {
      super(builder);
    }
    private FindCalendarCommentList(boolean noInit) {}
    
    private static final FindCalendarCommentList defaultInstance;
    public static FindCalendarCommentList getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindCalendarCommentList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_FindCalendarCommentList_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_FindCalendarCommentList_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 calendarId = 3;
    public static final int CALENDARID_FIELD_NUMBER = 3;
    private long calendarId_;
    public boolean hasCalendarId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getCalendarId() {
      return calendarId_;
    }
    
    private void initFields() {
      calendarId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(3, calendarId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, calendarId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FindCalendarCommentList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCommentList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCommentList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCommentList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCommentList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCommentList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCommentList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCommentList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCommentList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCommentList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FindCalendarCommentList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FindCalendarCommentListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_FindCalendarCommentList_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_FindCalendarCommentList_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.FindCalendarCommentList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        calendarId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FindCalendarCommentList.getDescriptor();
      }
      
      public FindCalendarCommentList getDefaultInstanceForType() {
        return FindCalendarCommentList.getDefaultInstance();
      }
      
      public FindCalendarCommentList build() {
        FindCalendarCommentList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FindCalendarCommentList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FindCalendarCommentList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FindCalendarCommentList buildPartial() {
        FindCalendarCommentList result = new FindCalendarCommentList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarId_ = calendarId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FindCalendarCommentList) {
          return mergeFrom((FindCalendarCommentList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FindCalendarCommentList other) {
        if (other == FindCalendarCommentList.getDefaultInstance()) return this;
        if (other.hasCalendarId()) {
          setCalendarId(other.getCalendarId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 24: {
              bitField0_ |= 0x00000001;
              calendarId_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 calendarId = 3;
      private long calendarId_ ;
      public boolean hasCalendarId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getCalendarId() {
        return calendarId_;
      }
      public Builder setCalendarId(long value) {
        bitField0_ |= 0x00000001;
        calendarId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalendarId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarId_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FindCalendarCommentList)
    }
    
    static {
      defaultInstance = new FindCalendarCommentList(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FindCalendarCommentList)
  }
  
  public interface FindCalendarCommentListRetOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .CalendarComment calendarComments = 1;
    java.util.List<CalendarComment>
        getCalendarCommentsList();
    CalendarComment getCalendarComments(int index);
    int getCalendarCommentsCount();
    java.util.List<? extends CalendarCommentOrBuilder>
        getCalendarCommentsOrBuilderList();
    CalendarCommentOrBuilder getCalendarCommentsOrBuilder(
            int index);
  }
  public static final class FindCalendarCommentListRet extends
      com.google.protobuf.GeneratedMessage
      implements FindCalendarCommentListRetOrBuilder {
    // Use FindCalendarCommentListRet.newBuilder() to construct.
    private FindCalendarCommentListRet(Builder builder) {
      super(builder);
    }
    private FindCalendarCommentListRet(boolean noInit) {}
    
    private static final FindCalendarCommentListRet defaultInstance;
    public static FindCalendarCommentListRet getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindCalendarCommentListRet getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_FindCalendarCommentListRet_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_FindCalendarCommentListRet_fieldAccessorTable;
    }
    
    // repeated .CalendarComment calendarComments = 1;
    public static final int CALENDARCOMMENTS_FIELD_NUMBER = 1;
    private java.util.List<CalendarComment> calendarComments_;
    public java.util.List<CalendarComment> getCalendarCommentsList() {
      return calendarComments_;
    }
    public java.util.List<? extends CalendarCommentOrBuilder>
        getCalendarCommentsOrBuilderList() {
      return calendarComments_;
    }
    public int getCalendarCommentsCount() {
      return calendarComments_.size();
    }
    public CalendarComment getCalendarComments(int index) {
      return calendarComments_.get(index);
    }
    public CalendarCommentOrBuilder getCalendarCommentsOrBuilder(
        int index) {
      return calendarComments_.get(index);
    }
    
    private void initFields() {
      calendarComments_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < calendarComments_.size(); i++) {
        output.writeMessage(1, calendarComments_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < calendarComments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarComments_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FindCalendarCommentListRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCommentListRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCommentListRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCommentListRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCommentListRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCommentListRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCommentListRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCommentListRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCommentListRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCommentListRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FindCalendarCommentListRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FindCalendarCommentListRetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_FindCalendarCommentListRet_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_FindCalendarCommentListRet_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.FindCalendarCommentListRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCalendarCommentsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (calendarCommentsBuilder_ == null) {
          calendarComments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          calendarCommentsBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FindCalendarCommentListRet.getDescriptor();
      }
      
      public FindCalendarCommentListRet getDefaultInstanceForType() {
        return FindCalendarCommentListRet.getDefaultInstance();
      }
      
      public FindCalendarCommentListRet build() {
        FindCalendarCommentListRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FindCalendarCommentListRet buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FindCalendarCommentListRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FindCalendarCommentListRet buildPartial() {
        FindCalendarCommentListRet result = new FindCalendarCommentListRet(this);
        int from_bitField0_ = bitField0_;
        if (calendarCommentsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            calendarComments_ = java.util.Collections.unmodifiableList(calendarComments_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.calendarComments_ = calendarComments_;
        } else {
          result.calendarComments_ = calendarCommentsBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FindCalendarCommentListRet) {
          return mergeFrom((FindCalendarCommentListRet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FindCalendarCommentListRet other) {
        if (other == FindCalendarCommentListRet.getDefaultInstance()) return this;
        if (calendarCommentsBuilder_ == null) {
          if (!other.calendarComments_.isEmpty()) {
            if (calendarComments_.isEmpty()) {
              calendarComments_ = other.calendarComments_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCalendarCommentsIsMutable();
              calendarComments_.addAll(other.calendarComments_);
            }
            onChanged();
          }
        } else {
          if (!other.calendarComments_.isEmpty()) {
            if (calendarCommentsBuilder_.isEmpty()) {
              calendarCommentsBuilder_.dispose();
              calendarCommentsBuilder_ = null;
              calendarComments_ = other.calendarComments_;
              bitField0_ = (bitField0_ & ~0x00000001);
              calendarCommentsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCalendarCommentsFieldBuilder() : null;
            } else {
              calendarCommentsBuilder_.addAllMessages(other.calendarComments_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              CalendarComment.Builder subBuilder = CalendarComment.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCalendarComments(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .CalendarComment calendarComments = 1;
      private java.util.List<CalendarComment> calendarComments_ =
        java.util.Collections.emptyList();
      private void ensureCalendarCommentsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          calendarComments_ = new java.util.ArrayList<CalendarComment>(calendarComments_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          CalendarComment, CalendarComment.Builder, CalendarCommentOrBuilder> calendarCommentsBuilder_;
      
      public java.util.List<CalendarComment> getCalendarCommentsList() {
        if (calendarCommentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(calendarComments_);
        } else {
          return calendarCommentsBuilder_.getMessageList();
        }
      }
      public int getCalendarCommentsCount() {
        if (calendarCommentsBuilder_ == null) {
          return calendarComments_.size();
        } else {
          return calendarCommentsBuilder_.getCount();
        }
      }
      public CalendarComment getCalendarComments(int index) {
        if (calendarCommentsBuilder_ == null) {
          return calendarComments_.get(index);
        } else {
          return calendarCommentsBuilder_.getMessage(index);
        }
      }
      public Builder setCalendarComments(
          int index, CalendarComment value) {
        if (calendarCommentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalendarCommentsIsMutable();
          calendarComments_.set(index, value);
          onChanged();
        } else {
          calendarCommentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setCalendarComments(
          int index, CalendarComment.Builder builderForValue) {
        if (calendarCommentsBuilder_ == null) {
          ensureCalendarCommentsIsMutable();
          calendarComments_.set(index, builderForValue.build());
          onChanged();
        } else {
          calendarCommentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addCalendarComments(CalendarComment value) {
        if (calendarCommentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalendarCommentsIsMutable();
          calendarComments_.add(value);
          onChanged();
        } else {
          calendarCommentsBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addCalendarComments(
          int index, CalendarComment value) {
        if (calendarCommentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCalendarCommentsIsMutable();
          calendarComments_.add(index, value);
          onChanged();
        } else {
          calendarCommentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addCalendarComments(
          CalendarComment.Builder builderForValue) {
        if (calendarCommentsBuilder_ == null) {
          ensureCalendarCommentsIsMutable();
          calendarComments_.add(builderForValue.build());
          onChanged();
        } else {
          calendarCommentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addCalendarComments(
          int index, CalendarComment.Builder builderForValue) {
        if (calendarCommentsBuilder_ == null) {
          ensureCalendarCommentsIsMutable();
          calendarComments_.add(index, builderForValue.build());
          onChanged();
        } else {
          calendarCommentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllCalendarComments(
          Iterable<? extends CalendarComment> values) {
        if (calendarCommentsBuilder_ == null) {
          ensureCalendarCommentsIsMutable();
          super.addAll(values, calendarComments_);
          onChanged();
        } else {
          calendarCommentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearCalendarComments() {
        if (calendarCommentsBuilder_ == null) {
          calendarComments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          calendarCommentsBuilder_.clear();
        }
        return this;
      }
      public Builder removeCalendarComments(int index) {
        if (calendarCommentsBuilder_ == null) {
          ensureCalendarCommentsIsMutable();
          calendarComments_.remove(index);
          onChanged();
        } else {
          calendarCommentsBuilder_.remove(index);
        }
        return this;
      }
      public CalendarComment.Builder getCalendarCommentsBuilder(
          int index) {
        return getCalendarCommentsFieldBuilder().getBuilder(index);
      }
      public CalendarCommentOrBuilder getCalendarCommentsOrBuilder(
          int index) {
        if (calendarCommentsBuilder_ == null) {
          return calendarComments_.get(index);  } else {
          return calendarCommentsBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends CalendarCommentOrBuilder>
           getCalendarCommentsOrBuilderList() {
        if (calendarCommentsBuilder_ != null) {
          return calendarCommentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(calendarComments_);
        }
      }
      public CalendarComment.Builder addCalendarCommentsBuilder() {
        return getCalendarCommentsFieldBuilder().addBuilder(
            CalendarComment.getDefaultInstance());
      }
      public CalendarComment.Builder addCalendarCommentsBuilder(
          int index) {
        return getCalendarCommentsFieldBuilder().addBuilder(
            index, CalendarComment.getDefaultInstance());
      }
      public java.util.List<CalendarComment.Builder>
           getCalendarCommentsBuilderList() {
        return getCalendarCommentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          CalendarComment, CalendarComment.Builder, CalendarCommentOrBuilder>
          getCalendarCommentsFieldBuilder() {
        if (calendarCommentsBuilder_ == null) {
          calendarCommentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              CalendarComment, CalendarComment.Builder, CalendarCommentOrBuilder>(
                  calendarComments_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          calendarComments_ = null;
        }
        return calendarCommentsBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:FindCalendarCommentListRet)
    }
    
    static {
      defaultInstance = new FindCalendarCommentListRet(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FindCalendarCommentListRet)
  }
  
  public interface CalendarCommentOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 id = 1;
    boolean hasId();
    long getId();
    
    // optional int64 userId = 2;
    boolean hasUserId();
    long getUserId();
    
    // optional int64 cmtUserId = 3;
    boolean hasCmtUserId();
    long getCmtUserId();
    
    // optional string calCommentDesc = 5;
    boolean hasCalCommentDesc();
    String getCalCommentDesc();
    
    // optional string calCommentPic = 6;
    boolean hasCalCommentPic();
    String getCalCommentPic();
    
    // optional string calCommentVoice = 7;
    boolean hasCalCommentVoice();
    String getCalCommentVoice();
    
    // optional string calCommentVideo = 8;
    boolean hasCalCommentVideo();
    String getCalCommentVideo();
    
    // optional int64 longitude = 10;
    boolean hasLongitude();
    long getLongitude();
    
    // optional int64 latitude = 11;
    boolean hasLatitude();
    long getLatitude();
    
    // optional string localInfo = 12;
    boolean hasLocalInfo();
    String getLocalInfo();
    
    // optional int32 enabled = 13;
    boolean hasEnabled();
    int getEnabled();
    
    // optional int64 createTime = 14;
    boolean hasCreateTime();
    long getCreateTime();
    
    // optional string createBy = 15;
    boolean hasCreateBy();
    String getCreateBy();
    
    // optional int64 updateTime = 16;
    boolean hasUpdateTime();
    long getUpdateTime();
    
    // optional string updateBy = 17;
    boolean hasUpdateBy();
    String getUpdateBy();
  }
  public static final class CalendarComment extends
      com.google.protobuf.GeneratedMessage
      implements CalendarCommentOrBuilder {
    // Use CalendarComment.newBuilder() to construct.
    private CalendarComment(Builder builder) {
      super(builder);
    }
    private CalendarComment(boolean noInit) {}
    
    private static final CalendarComment defaultInstance;
    public static CalendarComment getDefaultInstance() {
      return defaultInstance;
    }
    
    public CalendarComment getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_CalendarComment_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_CalendarComment_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getId() {
      return id_;
    }
    
    // optional int64 userId = 2;
    public static final int USERID_FIELD_NUMBER = 2;
    private long userId_;
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getUserId() {
      return userId_;
    }
    
    // optional int64 cmtUserId = 3;
    public static final int CMTUSERID_FIELD_NUMBER = 3;
    private long cmtUserId_;
    public boolean hasCmtUserId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public long getCmtUserId() {
      return cmtUserId_;
    }
    
    // optional string calCommentDesc = 5;
    public static final int CALCOMMENTDESC_FIELD_NUMBER = 5;
    private Object calCommentDesc_;
    public boolean hasCalCommentDesc() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public String getCalCommentDesc() {
      Object ref = calCommentDesc_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          calCommentDesc_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCalCommentDescBytes() {
      Object ref = calCommentDesc_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        calCommentDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string calCommentPic = 6;
    public static final int CALCOMMENTPIC_FIELD_NUMBER = 6;
    private Object calCommentPic_;
    public boolean hasCalCommentPic() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public String getCalCommentPic() {
      Object ref = calCommentPic_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          calCommentPic_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCalCommentPicBytes() {
      Object ref = calCommentPic_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        calCommentPic_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string calCommentVoice = 7;
    public static final int CALCOMMENTVOICE_FIELD_NUMBER = 7;
    private Object calCommentVoice_;
    public boolean hasCalCommentVoice() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public String getCalCommentVoice() {
      Object ref = calCommentVoice_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          calCommentVoice_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCalCommentVoiceBytes() {
      Object ref = calCommentVoice_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        calCommentVoice_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional string calCommentVideo = 8;
    public static final int CALCOMMENTVIDEO_FIELD_NUMBER = 8;
    private Object calCommentVideo_;
    public boolean hasCalCommentVideo() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public String getCalCommentVideo() {
      Object ref = calCommentVideo_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          calCommentVideo_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCalCommentVideoBytes() {
      Object ref = calCommentVideo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        calCommentVideo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int64 longitude = 10;
    public static final int LONGITUDE_FIELD_NUMBER = 10;
    private long longitude_;
    public boolean hasLongitude() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public long getLongitude() {
      return longitude_;
    }
    
    // optional int64 latitude = 11;
    public static final int LATITUDE_FIELD_NUMBER = 11;
    private long latitude_;
    public boolean hasLatitude() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public long getLatitude() {
      return latitude_;
    }
    
    // optional string localInfo = 12;
    public static final int LOCALINFO_FIELD_NUMBER = 12;
    private Object localInfo_;
    public boolean hasLocalInfo() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public String getLocalInfo() {
      Object ref = localInfo_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          localInfo_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getLocalInfoBytes() {
      Object ref = localInfo_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        localInfo_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int32 enabled = 13;
    public static final int ENABLED_FIELD_NUMBER = 13;
    private int enabled_;
    public boolean hasEnabled() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    public int getEnabled() {
      return enabled_;
    }
    
    // optional int64 createTime = 14;
    public static final int CREATETIME_FIELD_NUMBER = 14;
    private long createTime_;
    public boolean hasCreateTime() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    public long getCreateTime() {
      return createTime_;
    }
    
    // optional string createBy = 15;
    public static final int CREATEBY_FIELD_NUMBER = 15;
    private Object createBy_;
    public boolean hasCreateBy() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    public String getCreateBy() {
      Object ref = createBy_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          createBy_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getCreateByBytes() {
      Object ref = createBy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        createBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // optional int64 updateTime = 16;
    public static final int UPDATETIME_FIELD_NUMBER = 16;
    private long updateTime_;
    public boolean hasUpdateTime() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    public long getUpdateTime() {
      return updateTime_;
    }
    
    // optional string updateBy = 17;
    public static final int UPDATEBY_FIELD_NUMBER = 17;
    private Object updateBy_;
    public boolean hasUpdateBy() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    public String getUpdateBy() {
      Object ref = updateBy_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          updateBy_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getUpdateByBytes() {
      Object ref = updateBy_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        updateBy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    private void initFields() {
      id_ = 0L;
      userId_ = 0L;
      cmtUserId_ = 0L;
      calCommentDesc_ = "";
      calCommentPic_ = "";
      calCommentVoice_ = "";
      calCommentVideo_ = "";
      longitude_ = 0L;
      latitude_ = 0L;
      localInfo_ = "";
      enabled_ = 0;
      createTime_ = 0L;
      createBy_ = "";
      updateTime_ = 0L;
      updateBy_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt64(3, cmtUserId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(5, getCalCommentDescBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(6, getCalCommentPicBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(7, getCalCommentVoiceBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(8, getCalCommentVideoBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt64(10, longitude_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt64(11, latitude_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(12, getLocalInfoBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(13, enabled_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt64(14, createTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(15, getCreateByBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(16, updateTime_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(17, getUpdateByBytes());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, id_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, userId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, cmtUserId_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getCalCommentDescBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getCalCommentPicBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getCalCommentVoiceBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getCalCommentVideoBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(10, longitude_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(11, latitude_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getLocalInfoBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, enabled_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(14, createTime_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(15, getCreateByBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(16, updateTime_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getUpdateByBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static CalendarComment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static CalendarComment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static CalendarComment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static CalendarComment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static CalendarComment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static CalendarComment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static CalendarComment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static CalendarComment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static CalendarComment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static CalendarComment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(CalendarComment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements CalendarCommentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_CalendarComment_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_CalendarComment_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.CalendarComment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        id_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        cmtUserId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        calCommentDesc_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        calCommentPic_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        calCommentVoice_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        calCommentVideo_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        longitude_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        latitude_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000100);
        localInfo_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        enabled_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        createTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000800);
        createBy_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        updateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00002000);
        updateBy_ = "";
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalendarComment.getDescriptor();
      }
      
      public CalendarComment getDefaultInstanceForType() {
        return CalendarComment.getDefaultInstance();
      }
      
      public CalendarComment build() {
        CalendarComment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private CalendarComment buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        CalendarComment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public CalendarComment buildPartial() {
        CalendarComment result = new CalendarComment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.id_ = id_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cmtUserId_ = cmtUserId_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.calCommentDesc_ = calCommentDesc_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.calCommentPic_ = calCommentPic_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.calCommentVoice_ = calCommentVoice_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.calCommentVideo_ = calCommentVideo_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.longitude_ = longitude_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.latitude_ = latitude_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.localInfo_ = localInfo_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.enabled_ = enabled_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.createTime_ = createTime_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.createBy_ = createBy_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.updateTime_ = updateTime_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.updateBy_ = updateBy_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalendarComment) {
          return mergeFrom((CalendarComment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(CalendarComment other) {
        if (other == CalendarComment.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasUserId()) {
          setUserId(other.getUserId());
        }
        if (other.hasCmtUserId()) {
          setCmtUserId(other.getCmtUserId());
        }
        if (other.hasCalCommentDesc()) {
          setCalCommentDesc(other.getCalCommentDesc());
        }
        if (other.hasCalCommentPic()) {
          setCalCommentPic(other.getCalCommentPic());
        }
        if (other.hasCalCommentVoice()) {
          setCalCommentVoice(other.getCalCommentVoice());
        }
        if (other.hasCalCommentVideo()) {
          setCalCommentVideo(other.getCalCommentVideo());
        }
        if (other.hasLongitude()) {
          setLongitude(other.getLongitude());
        }
        if (other.hasLatitude()) {
          setLatitude(other.getLatitude());
        }
        if (other.hasLocalInfo()) {
          setLocalInfo(other.getLocalInfo());
        }
        if (other.hasEnabled()) {
          setEnabled(other.getEnabled());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasCreateBy()) {
          setCreateBy(other.getCreateBy());
        }
        if (other.hasUpdateTime()) {
          setUpdateTime(other.getUpdateTime());
        }
        if (other.hasUpdateBy()) {
          setUpdateBy(other.getUpdateBy());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              id_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              userId_ = input.readInt64();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              cmtUserId_ = input.readInt64();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000008;
              calCommentDesc_ = input.readBytes();
              break;
            }
            case 50: {
              bitField0_ |= 0x00000010;
              calCommentPic_ = input.readBytes();
              break;
            }
            case 58: {
              bitField0_ |= 0x00000020;
              calCommentVoice_ = input.readBytes();
              break;
            }
            case 66: {
              bitField0_ |= 0x00000040;
              calCommentVideo_ = input.readBytes();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              longitude_ = input.readInt64();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              latitude_ = input.readInt64();
              break;
            }
            case 98: {
              bitField0_ |= 0x00000200;
              localInfo_ = input.readBytes();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              enabled_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000800;
              createTime_ = input.readInt64();
              break;
            }
            case 122: {
              bitField0_ |= 0x00001000;
              createBy_ = input.readBytes();
              break;
            }
            case 128: {
              bitField0_ |= 0x00002000;
              updateTime_ = input.readInt64();
              break;
            }
            case 138: {
              bitField0_ |= 0x00004000;
              updateBy_ = input.readBytes();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 id = 1;
      private long id_ ;
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getId() {
        return id_;
      }
      public Builder setId(long value) {
        bitField0_ |= 0x00000001;
        id_ = value;
        onChanged();
        return this;
      }
      public Builder clearId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        id_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 userId = 2;
      private long userId_ ;
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getUserId() {
        return userId_;
      }
      public Builder setUserId(long value) {
        bitField0_ |= 0x00000002;
        userId_ = value;
        onChanged();
        return this;
      }
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        userId_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 cmtUserId = 3;
      private long cmtUserId_ ;
      public boolean hasCmtUserId() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public long getCmtUserId() {
        return cmtUserId_;
      }
      public Builder setCmtUserId(long value) {
        bitField0_ |= 0x00000004;
        cmtUserId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCmtUserId() {
        bitField0_ = (bitField0_ & ~0x00000004);
        cmtUserId_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string calCommentDesc = 5;
      private Object calCommentDesc_ = "";
      public boolean hasCalCommentDesc() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public String getCalCommentDesc() {
        Object ref = calCommentDesc_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          calCommentDesc_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCalCommentDesc(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        calCommentDesc_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalCommentDesc() {
        bitField0_ = (bitField0_ & ~0x00000008);
        calCommentDesc_ = getDefaultInstance().getCalCommentDesc();
        onChanged();
        return this;
      }
      void setCalCommentDesc(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000008;
        calCommentDesc_ = value;
        onChanged();
      }
      
      // optional string calCommentPic = 6;
      private Object calCommentPic_ = "";
      public boolean hasCalCommentPic() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public String getCalCommentPic() {
        Object ref = calCommentPic_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          calCommentPic_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCalCommentPic(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        calCommentPic_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalCommentPic() {
        bitField0_ = (bitField0_ & ~0x00000010);
        calCommentPic_ = getDefaultInstance().getCalCommentPic();
        onChanged();
        return this;
      }
      void setCalCommentPic(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000010;
        calCommentPic_ = value;
        onChanged();
      }
      
      // optional string calCommentVoice = 7;
      private Object calCommentVoice_ = "";
      public boolean hasCalCommentVoice() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public String getCalCommentVoice() {
        Object ref = calCommentVoice_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          calCommentVoice_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCalCommentVoice(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        calCommentVoice_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalCommentVoice() {
        bitField0_ = (bitField0_ & ~0x00000020);
        calCommentVoice_ = getDefaultInstance().getCalCommentVoice();
        onChanged();
        return this;
      }
      void setCalCommentVoice(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000020;
        calCommentVoice_ = value;
        onChanged();
      }
      
      // optional string calCommentVideo = 8;
      private Object calCommentVideo_ = "";
      public boolean hasCalCommentVideo() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public String getCalCommentVideo() {
        Object ref = calCommentVideo_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          calCommentVideo_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCalCommentVideo(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        calCommentVideo_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalCommentVideo() {
        bitField0_ = (bitField0_ & ~0x00000040);
        calCommentVideo_ = getDefaultInstance().getCalCommentVideo();
        onChanged();
        return this;
      }
      void setCalCommentVideo(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000040;
        calCommentVideo_ = value;
        onChanged();
      }
      
      // optional int64 longitude = 10;
      private long longitude_ ;
      public boolean hasLongitude() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public long getLongitude() {
        return longitude_;
      }
      public Builder setLongitude(long value) {
        bitField0_ |= 0x00000080;
        longitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLongitude() {
        bitField0_ = (bitField0_ & ~0x00000080);
        longitude_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 latitude = 11;
      private long latitude_ ;
      public boolean hasLatitude() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public long getLatitude() {
        return latitude_;
      }
      public Builder setLatitude(long value) {
        bitField0_ |= 0x00000100;
        latitude_ = value;
        onChanged();
        return this;
      }
      public Builder clearLatitude() {
        bitField0_ = (bitField0_ & ~0x00000100);
        latitude_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string localInfo = 12;
      private Object localInfo_ = "";
      public boolean hasLocalInfo() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public String getLocalInfo() {
        Object ref = localInfo_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          localInfo_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setLocalInfo(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        localInfo_ = value;
        onChanged();
        return this;
      }
      public Builder clearLocalInfo() {
        bitField0_ = (bitField0_ & ~0x00000200);
        localInfo_ = getDefaultInstance().getLocalInfo();
        onChanged();
        return this;
      }
      void setLocalInfo(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000200;
        localInfo_ = value;
        onChanged();
      }
      
      // optional int32 enabled = 13;
      private int enabled_ ;
      public boolean hasEnabled() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      public int getEnabled() {
        return enabled_;
      }
      public Builder setEnabled(int value) {
        bitField0_ |= 0x00000400;
        enabled_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnabled() {
        bitField0_ = (bitField0_ & ~0x00000400);
        enabled_ = 0;
        onChanged();
        return this;
      }
      
      // optional int64 createTime = 14;
      private long createTime_ ;
      public boolean hasCreateTime() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      public long getCreateTime() {
        return createTime_;
      }
      public Builder setCreateTime(long value) {
        bitField0_ |= 0x00000800;
        createTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearCreateTime() {
        bitField0_ = (bitField0_ & ~0x00000800);
        createTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string createBy = 15;
      private Object createBy_ = "";
      public boolean hasCreateBy() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      public String getCreateBy() {
        Object ref = createBy_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          createBy_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setCreateBy(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        createBy_ = value;
        onChanged();
        return this;
      }
      public Builder clearCreateBy() {
        bitField0_ = (bitField0_ & ~0x00001000);
        createBy_ = getDefaultInstance().getCreateBy();
        onChanged();
        return this;
      }
      void setCreateBy(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00001000;
        createBy_ = value;
        onChanged();
      }
      
      // optional int64 updateTime = 16;
      private long updateTime_ ;
      public boolean hasUpdateTime() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      public long getUpdateTime() {
        return updateTime_;
      }
      public Builder setUpdateTime(long value) {
        bitField0_ |= 0x00002000;
        updateTime_ = value;
        onChanged();
        return this;
      }
      public Builder clearUpdateTime() {
        bitField0_ = (bitField0_ & ~0x00002000);
        updateTime_ = 0L;
        onChanged();
        return this;
      }
      
      // optional string updateBy = 17;
      private Object updateBy_ = "";
      public boolean hasUpdateBy() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      public String getUpdateBy() {
        Object ref = updateBy_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          updateBy_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setUpdateBy(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00004000;
        updateBy_ = value;
        onChanged();
        return this;
      }
      public Builder clearUpdateBy() {
        bitField0_ = (bitField0_ & ~0x00004000);
        updateBy_ = getDefaultInstance().getUpdateBy();
        onChanged();
        return this;
      }
      void setUpdateBy(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00004000;
        updateBy_ = value;
        onChanged();
      }
      
      // @@protoc_insertion_point(builder_scope:CalendarComment)
    }
    
    static {
      defaultInstance = new CalendarComment(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CalendarComment)
  }
  
  public interface FindCalendarCommentByIdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 calendarId = 1;
    boolean hasCalendarId();
    long getCalendarId();
    
    // optional int64 calendarCommentId = 2;
    boolean hasCalendarCommentId();
    long getCalendarCommentId();
  }
  public static final class FindCalendarCommentById extends
      com.google.protobuf.GeneratedMessage
      implements FindCalendarCommentByIdOrBuilder {
    // Use FindCalendarCommentById.newBuilder() to construct.
    private FindCalendarCommentById(Builder builder) {
      super(builder);
    }
    private FindCalendarCommentById(boolean noInit) {}
    
    private static final FindCalendarCommentById defaultInstance;
    public static FindCalendarCommentById getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindCalendarCommentById getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_FindCalendarCommentById_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_FindCalendarCommentById_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 calendarId = 1;
    public static final int CALENDARID_FIELD_NUMBER = 1;
    private long calendarId_;
    public boolean hasCalendarId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getCalendarId() {
      return calendarId_;
    }
    
    // optional int64 calendarCommentId = 2;
    public static final int CALENDARCOMMENTID_FIELD_NUMBER = 2;
    private long calendarCommentId_;
    public boolean hasCalendarCommentId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getCalendarCommentId() {
      return calendarCommentId_;
    }
    
    private void initFields() {
      calendarId_ = 0L;
      calendarCommentId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, calendarCommentId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, calendarCommentId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FindCalendarCommentById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCommentById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCommentById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCommentById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCommentById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCommentById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCommentById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCommentById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCommentById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCommentById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FindCalendarCommentById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FindCalendarCommentByIdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_FindCalendarCommentById_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_FindCalendarCommentById_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.FindCalendarCommentById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        calendarId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarCommentId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FindCalendarCommentById.getDescriptor();
      }
      
      public FindCalendarCommentById getDefaultInstanceForType() {
        return FindCalendarCommentById.getDefaultInstance();
      }
      
      public FindCalendarCommentById build() {
        FindCalendarCommentById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FindCalendarCommentById buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FindCalendarCommentById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FindCalendarCommentById buildPartial() {
        FindCalendarCommentById result = new FindCalendarCommentById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarId_ = calendarId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.calendarCommentId_ = calendarCommentId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FindCalendarCommentById) {
          return mergeFrom((FindCalendarCommentById)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FindCalendarCommentById other) {
        if (other == FindCalendarCommentById.getDefaultInstance()) return this;
        if (other.hasCalendarId()) {
          setCalendarId(other.getCalendarId());
        }
        if (other.hasCalendarCommentId()) {
          setCalendarCommentId(other.getCalendarCommentId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              calendarCommentId_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 calendarId = 1;
      private long calendarId_ ;
      public boolean hasCalendarId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getCalendarId() {
        return calendarId_;
      }
      public Builder setCalendarId(long value) {
        bitField0_ |= 0x00000001;
        calendarId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalendarId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarId_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 calendarCommentId = 2;
      private long calendarCommentId_ ;
      public boolean hasCalendarCommentId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getCalendarCommentId() {
        return calendarCommentId_;
      }
      public Builder setCalendarCommentId(long value) {
        bitField0_ |= 0x00000002;
        calendarCommentId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalendarCommentId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        calendarCommentId_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FindCalendarCommentById)
    }
    
    static {
      defaultInstance = new FindCalendarCommentById(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FindCalendarCommentById)
  }
  
  public interface FindCalendarCommentByIdRetOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .CalendarComment calendarComment = 1;
    boolean hasCalendarComment();
    CalendarComment getCalendarComment();
    CalendarCommentOrBuilder getCalendarCommentOrBuilder();
  }
  public static final class FindCalendarCommentByIdRet extends
      com.google.protobuf.GeneratedMessage
      implements FindCalendarCommentByIdRetOrBuilder {
    // Use FindCalendarCommentByIdRet.newBuilder() to construct.
    private FindCalendarCommentByIdRet(Builder builder) {
      super(builder);
    }
    private FindCalendarCommentByIdRet(boolean noInit) {}
    
    private static final FindCalendarCommentByIdRet defaultInstance;
    public static FindCalendarCommentByIdRet getDefaultInstance() {
      return defaultInstance;
    }
    
    public FindCalendarCommentByIdRet getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_FindCalendarCommentByIdRet_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_FindCalendarCommentByIdRet_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .CalendarComment calendarComment = 1;
    public static final int CALENDARCOMMENT_FIELD_NUMBER = 1;
    private CalendarComment calendarComment_;
    public boolean hasCalendarComment() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public CalendarComment getCalendarComment() {
      return calendarComment_;
    }
    public CalendarCommentOrBuilder getCalendarCommentOrBuilder() {
      return calendarComment_;
    }
    
    private void initFields() {
      calendarComment_ = CalendarComment.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendarComment_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarComment_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static FindCalendarCommentByIdRet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCommentByIdRet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCommentByIdRet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static FindCalendarCommentByIdRet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCommentByIdRet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCommentByIdRet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static FindCalendarCommentByIdRet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCommentByIdRet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static FindCalendarCommentByIdRet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static FindCalendarCommentByIdRet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(FindCalendarCommentByIdRet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements FindCalendarCommentByIdRetOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_FindCalendarCommentByIdRet_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_FindCalendarCommentByIdRet_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.FindCalendarCommentByIdRet.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCalendarCommentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (calendarCommentBuilder_ == null) {
          calendarComment_ = CalendarComment.getDefaultInstance();
        } else {
          calendarCommentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FindCalendarCommentByIdRet.getDescriptor();
      }
      
      public FindCalendarCommentByIdRet getDefaultInstanceForType() {
        return FindCalendarCommentByIdRet.getDefaultInstance();
      }
      
      public FindCalendarCommentByIdRet build() {
        FindCalendarCommentByIdRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private FindCalendarCommentByIdRet buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        FindCalendarCommentByIdRet result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public FindCalendarCommentByIdRet buildPartial() {
        FindCalendarCommentByIdRet result = new FindCalendarCommentByIdRet(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (calendarCommentBuilder_ == null) {
          result.calendarComment_ = calendarComment_;
        } else {
          result.calendarComment_ = calendarCommentBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FindCalendarCommentByIdRet) {
          return mergeFrom((FindCalendarCommentByIdRet)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(FindCalendarCommentByIdRet other) {
        if (other == FindCalendarCommentByIdRet.getDefaultInstance()) return this;
        if (other.hasCalendarComment()) {
          mergeCalendarComment(other.getCalendarComment());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              CalendarComment.Builder subBuilder = CalendarComment.newBuilder();
              if (hasCalendarComment()) {
                subBuilder.mergeFrom(getCalendarComment());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCalendarComment(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .CalendarComment calendarComment = 1;
      private CalendarComment calendarComment_ = CalendarComment.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          CalendarComment, CalendarComment.Builder, CalendarCommentOrBuilder> calendarCommentBuilder_;
      public boolean hasCalendarComment() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public CalendarComment getCalendarComment() {
        if (calendarCommentBuilder_ == null) {
          return calendarComment_;
        } else {
          return calendarCommentBuilder_.getMessage();
        }
      }
      public Builder setCalendarComment(CalendarComment value) {
        if (calendarCommentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calendarComment_ = value;
          onChanged();
        } else {
          calendarCommentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCalendarComment(
          CalendarComment.Builder builderForValue) {
        if (calendarCommentBuilder_ == null) {
          calendarComment_ = builderForValue.build();
          onChanged();
        } else {
          calendarCommentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCalendarComment(CalendarComment value) {
        if (calendarCommentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              calendarComment_ != CalendarComment.getDefaultInstance()) {
            calendarComment_ =
              CalendarComment.newBuilder(calendarComment_).mergeFrom(value).buildPartial();
          } else {
            calendarComment_ = value;
          }
          onChanged();
        } else {
          calendarCommentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCalendarComment() {
        if (calendarCommentBuilder_ == null) {
          calendarComment_ = CalendarComment.getDefaultInstance();
          onChanged();
        } else {
          calendarCommentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public CalendarComment.Builder getCalendarCommentBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCalendarCommentFieldBuilder().getBuilder();
      }
      public CalendarCommentOrBuilder getCalendarCommentOrBuilder() {
        if (calendarCommentBuilder_ != null) {
          return calendarCommentBuilder_.getMessageOrBuilder();
        } else {
          return calendarComment_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          CalendarComment, CalendarComment.Builder, CalendarCommentOrBuilder>
          getCalendarCommentFieldBuilder() {
        if (calendarCommentBuilder_ == null) {
          calendarCommentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              CalendarComment, CalendarComment.Builder, CalendarCommentOrBuilder>(
                  calendarComment_,
                  getParentForChildren(),
                  isClean());
          calendarComment_ = null;
        }
        return calendarCommentBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:FindCalendarCommentByIdRet)
    }
    
    static {
      defaultInstance = new FindCalendarCommentByIdRet(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FindCalendarCommentByIdRet)
  }
  
  public interface AddCalendarCommentOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional .CalendarComment calendarComment = 1;
    boolean hasCalendarComment();
    CalendarComment getCalendarComment();
    CalendarCommentOrBuilder getCalendarCommentOrBuilder();
  }
  public static final class AddCalendarComment extends
      com.google.protobuf.GeneratedMessage
      implements AddCalendarCommentOrBuilder {
    // Use AddCalendarComment.newBuilder() to construct.
    private AddCalendarComment(Builder builder) {
      super(builder);
    }
    private AddCalendarComment(boolean noInit) {}
    
    private static final AddCalendarComment defaultInstance;
    public static AddCalendarComment getDefaultInstance() {
      return defaultInstance;
    }
    
    public AddCalendarComment getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_AddCalendarComment_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_AddCalendarComment_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional .CalendarComment calendarComment = 1;
    public static final int CALENDARCOMMENT_FIELD_NUMBER = 1;
    private CalendarComment calendarComment_;
    public boolean hasCalendarComment() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public CalendarComment getCalendarComment() {
      return calendarComment_;
    }
    public CalendarCommentOrBuilder getCalendarCommentOrBuilder() {
      return calendarComment_;
    }
    
    private void initFields() {
      calendarComment_ = CalendarComment.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, calendarComment_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, calendarComment_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static AddCalendarComment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static AddCalendarComment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static AddCalendarComment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static AddCalendarComment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static AddCalendarComment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static AddCalendarComment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static AddCalendarComment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static AddCalendarComment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static AddCalendarComment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static AddCalendarComment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(AddCalendarComment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements AddCalendarCommentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_AddCalendarComment_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_AddCalendarComment_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.AddCalendarComment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCalendarCommentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (calendarCommentBuilder_ == null) {
          calendarComment_ = CalendarComment.getDefaultInstance();
        } else {
          calendarCommentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return AddCalendarComment.getDescriptor();
      }
      
      public AddCalendarComment getDefaultInstanceForType() {
        return AddCalendarComment.getDefaultInstance();
      }
      
      public AddCalendarComment build() {
        AddCalendarComment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private AddCalendarComment buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        AddCalendarComment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public AddCalendarComment buildPartial() {
        AddCalendarComment result = new AddCalendarComment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (calendarCommentBuilder_ == null) {
          result.calendarComment_ = calendarComment_;
        } else {
          result.calendarComment_ = calendarCommentBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof AddCalendarComment) {
          return mergeFrom((AddCalendarComment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(AddCalendarComment other) {
        if (other == AddCalendarComment.getDefaultInstance()) return this;
        if (other.hasCalendarComment()) {
          mergeCalendarComment(other.getCalendarComment());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              CalendarComment.Builder subBuilder = CalendarComment.newBuilder();
              if (hasCalendarComment()) {
                subBuilder.mergeFrom(getCalendarComment());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCalendarComment(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional .CalendarComment calendarComment = 1;
      private CalendarComment calendarComment_ = CalendarComment.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          CalendarComment, CalendarComment.Builder, CalendarCommentOrBuilder> calendarCommentBuilder_;
      public boolean hasCalendarComment() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public CalendarComment getCalendarComment() {
        if (calendarCommentBuilder_ == null) {
          return calendarComment_;
        } else {
          return calendarCommentBuilder_.getMessage();
        }
      }
      public Builder setCalendarComment(CalendarComment value) {
        if (calendarCommentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          calendarComment_ = value;
          onChanged();
        } else {
          calendarCommentBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setCalendarComment(
          CalendarComment.Builder builderForValue) {
        if (calendarCommentBuilder_ == null) {
          calendarComment_ = builderForValue.build();
          onChanged();
        } else {
          calendarCommentBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergeCalendarComment(CalendarComment value) {
        if (calendarCommentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              calendarComment_ != CalendarComment.getDefaultInstance()) {
            calendarComment_ =
              CalendarComment.newBuilder(calendarComment_).mergeFrom(value).buildPartial();
          } else {
            calendarComment_ = value;
          }
          onChanged();
        } else {
          calendarCommentBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearCalendarComment() {
        if (calendarCommentBuilder_ == null) {
          calendarComment_ = CalendarComment.getDefaultInstance();
          onChanged();
        } else {
          calendarCommentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public CalendarComment.Builder getCalendarCommentBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getCalendarCommentFieldBuilder().getBuilder();
      }
      public CalendarCommentOrBuilder getCalendarCommentOrBuilder() {
        if (calendarCommentBuilder_ != null) {
          return calendarCommentBuilder_.getMessageOrBuilder();
        } else {
          return calendarComment_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          CalendarComment, CalendarComment.Builder, CalendarCommentOrBuilder>
          getCalendarCommentFieldBuilder() {
        if (calendarCommentBuilder_ == null) {
          calendarCommentBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              CalendarComment, CalendarComment.Builder, CalendarCommentOrBuilder>(
                  calendarComment_,
                  getParentForChildren(),
                  isClean());
          calendarComment_ = null;
        }
        return calendarCommentBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:AddCalendarComment)
    }
    
    static {
      defaultInstance = new AddCalendarComment(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:AddCalendarComment)
  }
  
  public interface DeleteCalendarCommentByIdOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional int64 calendarId = 1;
    boolean hasCalendarId();
    long getCalendarId();
    
    // optional int64 calendarCommentId = 2;
    boolean hasCalendarCommentId();
    long getCalendarCommentId();
  }
  public static final class DeleteCalendarCommentById extends
      com.google.protobuf.GeneratedMessage
      implements DeleteCalendarCommentByIdOrBuilder {
    // Use DeleteCalendarCommentById.newBuilder() to construct.
    private DeleteCalendarCommentById(Builder builder) {
      super(builder);
    }
    private DeleteCalendarCommentById(boolean noInit) {}
    
    private static final DeleteCalendarCommentById defaultInstance;
    public static DeleteCalendarCommentById getDefaultInstance() {
      return defaultInstance;
    }
    
    public DeleteCalendarCommentById getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarMessage.internal_static_DeleteCalendarCommentById_descriptor;
    }
    
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarMessage.internal_static_DeleteCalendarCommentById_fieldAccessorTable;
    }
    
    private int bitField0_;
    // optional int64 calendarId = 1;
    public static final int CALENDARID_FIELD_NUMBER = 1;
    private long calendarId_;
    public boolean hasCalendarId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public long getCalendarId() {
      return calendarId_;
    }
    
    // optional int64 calendarCommentId = 2;
    public static final int CALENDARCOMMENTID_FIELD_NUMBER = 2;
    private long calendarCommentId_;
    public boolean hasCalendarCommentId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public long getCalendarCommentId() {
      return calendarCommentId_;
    }
    
    private void initFields() {
      calendarId_ = 0L;
      calendarCommentId_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, calendarId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt64(2, calendarCommentId_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, calendarId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, calendarCommentId_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @Override
    protected Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static DeleteCalendarCommentById parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DeleteCalendarCommentById parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DeleteCalendarCommentById parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static DeleteCalendarCommentById parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static DeleteCalendarCommentById parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DeleteCalendarCommentById parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static DeleteCalendarCommentById parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DeleteCalendarCommentById parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static DeleteCalendarCommentById parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static DeleteCalendarCommentById parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(DeleteCalendarCommentById prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements DeleteCalendarCommentByIdOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarMessage.internal_static_DeleteCalendarCommentById_descriptor;
      }
      
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarMessage.internal_static_DeleteCalendarCommentById_fieldAccessorTable;
      }
      
      // Construct using vine.app.message.CalendarMessage.DeleteCalendarCommentById.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        calendarId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarCommentId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return DeleteCalendarCommentById.getDescriptor();
      }
      
      public DeleteCalendarCommentById getDefaultInstanceForType() {
        return DeleteCalendarCommentById.getDefaultInstance();
      }
      
      public DeleteCalendarCommentById build() {
        DeleteCalendarCommentById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private DeleteCalendarCommentById buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        DeleteCalendarCommentById result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public DeleteCalendarCommentById buildPartial() {
        DeleteCalendarCommentById result = new DeleteCalendarCommentById(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.calendarId_ = calendarId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.calendarCommentId_ = calendarCommentId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof DeleteCalendarCommentById) {
          return mergeFrom((DeleteCalendarCommentById)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(DeleteCalendarCommentById other) {
        if (other == DeleteCalendarCommentById.getDefaultInstance()) return this;
        if (other.hasCalendarId()) {
          setCalendarId(other.getCalendarId());
        }
        if (other.hasCalendarCommentId()) {
          setCalendarCommentId(other.getCalendarCommentId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              calendarId_ = input.readInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              calendarCommentId_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional int64 calendarId = 1;
      private long calendarId_ ;
      public boolean hasCalendarId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public long getCalendarId() {
        return calendarId_;
      }
      public Builder setCalendarId(long value) {
        bitField0_ |= 0x00000001;
        calendarId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalendarId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        calendarId_ = 0L;
        onChanged();
        return this;
      }
      
      // optional int64 calendarCommentId = 2;
      private long calendarCommentId_ ;
      public boolean hasCalendarCommentId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public long getCalendarCommentId() {
        return calendarCommentId_;
      }
      public Builder setCalendarCommentId(long value) {
        bitField0_ |= 0x00000002;
        calendarCommentId_ = value;
        onChanged();
        return this;
      }
      public Builder clearCalendarCommentId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        calendarCommentId_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:DeleteCalendarCommentById)
    }
    
    static {
      defaultInstance = new DeleteCalendarCommentById(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:DeleteCalendarCommentById)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FindCalendarList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FindCalendarList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Calendar_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Calendar_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FindCalendarListRet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FindCalendarListRet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FindCalendarById_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FindCalendarById_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FindCalendarByIdRet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FindCalendarByIdRet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AddCalendar_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AddCalendar_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EditCalendarById_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EditCalendarById_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DeleteCalendarById_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DeleteCalendarById_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FindCalendarCategoryList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FindCalendarCategoryList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FindCalendarCategoryListRet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FindCalendarCategoryListRet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CalendarCategory_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CalendarCategory_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FindCalendarCategoryById_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FindCalendarCategoryById_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FindCalendarCategoryByIdRet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FindCalendarCategoryByIdRet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AddCalendarCategory_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AddCalendarCategory_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EditCalendarCategoryById_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EditCalendarCategoryById_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DeleteCalendarCategoryById_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DeleteCalendarCategoryById_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FindCalendarCommentList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FindCalendarCommentList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FindCalendarCommentListRet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FindCalendarCommentListRet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CalendarComment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CalendarComment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FindCalendarCommentById_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FindCalendarCommentById_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_FindCalendarCommentByIdRet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_FindCalendarCommentByIdRet_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AddCalendarComment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AddCalendarComment_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_DeleteCalendarCommentById_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_DeleteCalendarCommentById_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\025CalendarMessage.proto\"p\n\020FindCalendarL" +
      "ist\022\021\n\tstartTime\030\001 \001(\t\022\017\n\007endTime\030\002 \001(\t\022" +
      "\025\n\rcalCategoryId\030\003 \001(\003\022\020\n\010priority\030\004 \001(\005" +
      "\022\017\n\007keyword\030\005 \001(\t\"\242\003\n\010Calendar\022\n\n\002id\030\001 \001" +
      "(\003\022\016\n\006userId\030\002 \001(\003\022\025\n\rcalCategoryId\030\003 \001(" +
      "\003\022\017\n\007calName\030\004 \001(\t\022\017\n\007calDesc\030\005 \001(\t\022\016\n\006c" +
      "alPic\030\006 \001(\t\022\020\n\010calVoice\030\007 \001(\t\022\020\n\010calVide" +
      "o\030\010 \001(\t\022\020\n\010priority\030\t \001(\005\022\024\n\014alterEnable" +
      "d\030\n \001(\005\022\023\n\013openEnabled\030\013 \001(\005\022\022\n\nendEnabl" +
      "ed\030\014 \001(\005\022\021\n\talterTime\030\r \001(\003\022\024\n\014alterForw",
      "ard\030\016 \001(\005\022\021\n\tlongitude\030\017 \001(\003\022\020\n\010latitude" +
      "\030\020 \001(\003\022\021\n\tlocalInfo\030\021 \001(\t\022\017\n\007enabled\030\022 \001" +
      "(\005\022\022\n\ncreateTime\030\023 \001(\003\022\020\n\010createBy\030\024 \001(\t" +
      "\022\022\n\nupdateTime\030\025 \001(\003\022\020\n\010updateBy\030\026 \001(\t\"3" +
      "\n\023FindCalendarListRet\022\034\n\tcalendars\030\001 \003(\013" +
      "2\t.Calendar\"&\n\020FindCalendarById\022\022\n\ncalen" +
      "darId\030\001 \001(\003\"2\n\023FindCalendarByIdRet\022\033\n\010Ca" +
      "lendar\030\001 \001(\0132\t.Calendar\"*\n\013AddCalendar\022\033" +
      "\n\010calendar\030\001 \001(\0132\t.Calendar\"/\n\020EditCalen" +
      "darById\022\033\n\010calendar\030\001 \001(\0132\t.Calendar\"(\n\022",
      "DeleteCalendarById\022\022\n\ncalendarId\030\001 \001(\003\"O" +
      "\n\030FindCalendarCategoryList\022\021\n\tstartTime\030" +
      "\001 \001(\t\022\017\n\007endTime\030\002 \001(\t\022\017\n\007keyword\030\003 \001(\t\"" +
      "K\n\033FindCalendarCategoryListRet\022,\n\021calend" +
      "arCategorys\030\001 \003(\0132\021.CalendarCategory\"\254\001\n" +
      "\020CalendarCategory\022\n\n\002id\030\001 \001(\003\022\016\n\006userId\030" +
      "\002 \001(\003\022\014\n\004name\030\003 \001(\t\022\021\n\tshowOrder\030\004 \001(\005\022\017" +
      "\n\007enabled\030\005 \001(\005\022\022\n\ncreateTime\030\006 \001(\003\022\020\n\010c" +
      "reateBy\030\007 \001(\t\022\022\n\nupdateTime\030\010 \001(\003\022\020\n\010upd" +
      "ateBy\030\t \001(\t\"6\n\030FindCalendarCategoryById\022",
      "\032\n\022calendarCategoryId\030\001 \001(\003\"J\n\033FindCalen" +
      "darCategoryByIdRet\022+\n\020calendarCategory\030\001" +
      " \001(\0132\021.CalendarCategory\"B\n\023AddCalendarCa" +
      "tegory\022+\n\020calendarCategory\030\001 \001(\0132\021.Calen" +
      "darCategory\"G\n\030EditCalendarCategoryById\022" +
      "+\n\020calendarCategory\030\001 \001(\0132\021.CalendarCate" +
      "gory\"8\n\032DeleteCalendarCategoryById\022\032\n\022ca" +
      "lendarCategoryId\030\001 \001(\003\"-\n\027FindCalendarCo" +
      "mmentList\022\022\n\ncalendarId\030\003 \001(\003\"H\n\032FindCal" +
      "endarCommentListRet\022*\n\020calendarComments\030",
      "\001 \003(\0132\020.CalendarComment\"\266\002\n\017CalendarComm" +
      "ent\022\n\n\002id\030\001 \001(\003\022\016\n\006userId\030\002 \001(\003\022\021\n\tcmtUs" +
      "erId\030\003 \001(\003\022\026\n\016calCommentDesc\030\005 \001(\t\022\025\n\rca" +
      "lCommentPic\030\006 \001(\t\022\027\n\017calCommentVoice\030\007 \001" +
      "(\t\022\027\n\017calCommentVideo\030\010 \001(\t\022\021\n\tlongitude" +
      "\030\n \001(\003\022\020\n\010latitude\030\013 \001(\003\022\021\n\tlocalInfo\030\014 " +
      "\001(\t\022\017\n\007enabled\030\r \001(\005\022\022\n\ncreateTime\030\016 \001(\003" +
      "\022\020\n\010createBy\030\017 \001(\t\022\022\n\nupdateTime\030\020 \001(\003\022\020" +
      "\n\010updateBy\030\021 \001(\t\"H\n\027FindCalendarCommentB" +
      "yId\022\022\n\ncalendarId\030\001 \001(\003\022\031\n\021calendarComme",
      "ntId\030\002 \001(\003\"G\n\032FindCalendarCommentByIdRet" +
      "\022)\n\017calendarComment\030\001 \001(\0132\020.CalendarComm" +
      "ent\"?\n\022AddCalendarComment\022)\n\017calendarCom" +
      "ment\030\001 \001(\0132\020.CalendarComment\"J\n\031DeleteCa" +
      "lendarCommentById\022\022\n\ncalendarId\030\001 \001(\003\022\031\n" +
      "\021calendarCommentId\030\002 \001(\003B\022\n\020vine.app.mes" +
      "sage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_FindCalendarList_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_FindCalendarList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FindCalendarList_descriptor,
              new String[] { "StartTime", "EndTime", "CalCategoryId", "Priority", "Keyword", },
              FindCalendarList.class,
              FindCalendarList.Builder.class);
          internal_static_Calendar_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Calendar_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Calendar_descriptor,
              new String[] { "Id", "UserId", "CalCategoryId", "CalName", "CalDesc", "CalPic", "CalVoice", "CalVideo", "Priority", "AlterEnabled", "OpenEnabled", "EndEnabled", "AlterTime", "AlterForward", "Longitude", "Latitude", "LocalInfo", "Enabled", "CreateTime", "CreateBy", "UpdateTime", "UpdateBy", },
              Calendar.class,
              Calendar.Builder.class);
          internal_static_FindCalendarListRet_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_FindCalendarListRet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FindCalendarListRet_descriptor,
              new String[] { "Calendars", },
              FindCalendarListRet.class,
              FindCalendarListRet.Builder.class);
          internal_static_FindCalendarById_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_FindCalendarById_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FindCalendarById_descriptor,
              new String[] { "CalendarId", },
              FindCalendarById.class,
              FindCalendarById.Builder.class);
          internal_static_FindCalendarByIdRet_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_FindCalendarByIdRet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FindCalendarByIdRet_descriptor,
              new String[] { "Calendar", },
              FindCalendarByIdRet.class,
              FindCalendarByIdRet.Builder.class);
          internal_static_AddCalendar_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_AddCalendar_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AddCalendar_descriptor,
              new String[] { "Calendar", },
              AddCalendar.class,
              AddCalendar.Builder.class);
          internal_static_EditCalendarById_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_EditCalendarById_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EditCalendarById_descriptor,
              new String[] { "Calendar", },
              EditCalendarById.class,
              EditCalendarById.Builder.class);
          internal_static_DeleteCalendarById_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_DeleteCalendarById_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DeleteCalendarById_descriptor,
              new String[] { "CalendarId", },
              DeleteCalendarById.class,
              DeleteCalendarById.Builder.class);
          internal_static_FindCalendarCategoryList_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_FindCalendarCategoryList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FindCalendarCategoryList_descriptor,
              new String[] { "StartTime", "EndTime", "Keyword", },
              FindCalendarCategoryList.class,
              FindCalendarCategoryList.Builder.class);
          internal_static_FindCalendarCategoryListRet_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_FindCalendarCategoryListRet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FindCalendarCategoryListRet_descriptor,
              new String[] { "CalendarCategorys", },
              FindCalendarCategoryListRet.class,
              FindCalendarCategoryListRet.Builder.class);
          internal_static_CalendarCategory_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_CalendarCategory_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CalendarCategory_descriptor,
              new String[] { "Id", "UserId", "Name", "ShowOrder", "Enabled", "CreateTime", "CreateBy", "UpdateTime", "UpdateBy", },
              CalendarCategory.class,
              CalendarCategory.Builder.class);
          internal_static_FindCalendarCategoryById_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_FindCalendarCategoryById_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FindCalendarCategoryById_descriptor,
              new String[] { "CalendarCategoryId", },
              FindCalendarCategoryById.class,
              FindCalendarCategoryById.Builder.class);
          internal_static_FindCalendarCategoryByIdRet_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_FindCalendarCategoryByIdRet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FindCalendarCategoryByIdRet_descriptor,
              new String[] { "CalendarCategory", },
              FindCalendarCategoryByIdRet.class,
              FindCalendarCategoryByIdRet.Builder.class);
          internal_static_AddCalendarCategory_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_AddCalendarCategory_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AddCalendarCategory_descriptor,
              new String[] { "CalendarCategory", },
              AddCalendarCategory.class,
              AddCalendarCategory.Builder.class);
          internal_static_EditCalendarCategoryById_descriptor =
            getDescriptor().getMessageTypes().get(14);
          internal_static_EditCalendarCategoryById_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EditCalendarCategoryById_descriptor,
              new String[] { "CalendarCategory", },
              EditCalendarCategoryById.class,
              EditCalendarCategoryById.Builder.class);
          internal_static_DeleteCalendarCategoryById_descriptor =
            getDescriptor().getMessageTypes().get(15);
          internal_static_DeleteCalendarCategoryById_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DeleteCalendarCategoryById_descriptor,
              new String[] { "CalendarCategoryId", },
              DeleteCalendarCategoryById.class,
              DeleteCalendarCategoryById.Builder.class);
          internal_static_FindCalendarCommentList_descriptor =
            getDescriptor().getMessageTypes().get(16);
          internal_static_FindCalendarCommentList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FindCalendarCommentList_descriptor,
              new String[] { "CalendarId", },
              FindCalendarCommentList.class,
              FindCalendarCommentList.Builder.class);
          internal_static_FindCalendarCommentListRet_descriptor =
            getDescriptor().getMessageTypes().get(17);
          internal_static_FindCalendarCommentListRet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FindCalendarCommentListRet_descriptor,
              new String[] { "CalendarComments", },
              FindCalendarCommentListRet.class,
              FindCalendarCommentListRet.Builder.class);
          internal_static_CalendarComment_descriptor =
            getDescriptor().getMessageTypes().get(18);
          internal_static_CalendarComment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CalendarComment_descriptor,
              new String[] { "Id", "UserId", "CmtUserId", "CalCommentDesc", "CalCommentPic", "CalCommentVoice", "CalCommentVideo", "Longitude", "Latitude", "LocalInfo", "Enabled", "CreateTime", "CreateBy", "UpdateTime", "UpdateBy", },
              CalendarComment.class,
              CalendarComment.Builder.class);
          internal_static_FindCalendarCommentById_descriptor =
            getDescriptor().getMessageTypes().get(19);
          internal_static_FindCalendarCommentById_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FindCalendarCommentById_descriptor,
              new String[] { "CalendarId", "CalendarCommentId", },
              FindCalendarCommentById.class,
              FindCalendarCommentById.Builder.class);
          internal_static_FindCalendarCommentByIdRet_descriptor =
            getDescriptor().getMessageTypes().get(20);
          internal_static_FindCalendarCommentByIdRet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_FindCalendarCommentByIdRet_descriptor,
              new String[] { "CalendarComment", },
              FindCalendarCommentByIdRet.class,
              FindCalendarCommentByIdRet.Builder.class);
          internal_static_AddCalendarComment_descriptor =
            getDescriptor().getMessageTypes().get(21);
          internal_static_AddCalendarComment_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AddCalendarComment_descriptor,
              new String[] { "CalendarComment", },
              AddCalendarComment.class,
              AddCalendarComment.Builder.class);
          internal_static_DeleteCalendarCommentById_descriptor =
            getDescriptor().getMessageTypes().get(22);
          internal_static_DeleteCalendarCommentById_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_DeleteCalendarCommentById_descriptor,
              new String[] { "CalendarId", "CalendarCommentId", },
              DeleteCalendarCommentById.class,
              DeleteCalendarCommentById.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
